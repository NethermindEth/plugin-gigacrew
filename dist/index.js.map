{"version":3,"sources":["../src/client.ts","../src/environment.ts","../src/abi/GigaCrew.json","../src/seller.ts","../src/buyer.ts","../src/db.ts","../src/worker.ts","../src/actions/index.ts","../src/actions/list_services.ts","../src/actions/hire.ts","../src/index.ts"],"sourcesContent":["import { Client, IAgentRuntime, elizaLogger } from \"@elizaos/core\";\nimport { BlockTag, ethers } from \"ethers\";\nimport { getGigaCrewConfig, GigaCrewConfig } from \"./environment\";\nimport GigaCrewJSON from \"./abi/GigaCrew.json\";\nimport { GigaCrewSellerHandler } from \"./seller\";\nimport { GigaCrewBuyerHandler } from \"./buyer\";\nimport { GigaCrewDatabase } from \"./db\";\nimport { workResponseGenerator } from \"./worker\";\nexport * from \"./actions\";\n\nexport type WorkFunction = (runtime: IAgentRuntime, orderId: string, buyer: string, context: string) => Promise<string>;\nexport type ProcessWorkFunction = (workRequest: any) => void;\n\nconst GigaCrewABI = GigaCrewJSON.abi;\n\nexport class GigaCrewClient {\n    runtime: IAgentRuntime;\n    config: GigaCrewConfig;\n    provider: ethers.Provider;\n    contract: ethers.Contract;\n    seller: ethers.Wallet | null;\n    buyer: ethers.Wallet | null;\n    db: GigaCrewDatabase;\n    filters: any[];\n\n    sellerHandler: GigaCrewSellerHandler | null;\n    buyerHandler: GigaCrewBuyerHandler | null;\n\n    constructor(runtime: IAgentRuntime, config: GigaCrewConfig, worker?: WorkFunction, processWork?: ProcessWorkFunction) {\n        this.runtime = runtime;\n        this.config = config;\n\n        if (!this.config.GIGACREW_PROVIDER_URL || !this.config.GIGACREW_CONTRACT_ADDRESS) {\n            throw new Error(\"GigaCrew client requires GIGACREW_PROVIDER_URL and GIGACREW_CONTRACT_ADDRESS\");\n        }\n\n        const provider_url = this.config.GIGACREW_PROVIDER_URL;\n        if (provider_url.startsWith(\"ws://\") || provider_url.startsWith(\"wss://\")) {\n            this.provider = new ethers.WebSocketProvider(provider_url);\n        } else if (provider_url.startsWith(\"http://\") || provider_url.startsWith(\"https://\")) {\n            this.provider = new ethers.JsonRpcProvider(provider_url);\n        } else {\n            throw new Error(\"Invalid provider URL. Must start with ws://, wss://, http://, or https://\");\n        }\n\n        this.contract = new ethers.Contract(this.config.GIGACREW_CONTRACT_ADDRESS, GigaCrewABI, this.provider);\n\n        this.seller = this.config.GIGACREW_SELLER_PRIVATE_KEY ? new ethers.Wallet(this.config.GIGACREW_SELLER_PRIVATE_KEY, this.provider) : null;\n        this.buyer = this.config.GIGACREW_BUYER_PRIVATE_KEY ? new ethers.Wallet(this.config.GIGACREW_BUYER_PRIVATE_KEY, this.provider) : null;\n        \n        if ((runtime.character.settings as any)?.gigacrew?.seller === false) {\n            this.seller = null;\n        }\n\n        if ((runtime.character.settings as any)?.gigacrew?.buyer === false) {\n            this.buyer = null;\n        }\n        \n        if (!this.seller && !this.buyer) {\n            throw new Error(\"GigaCrew client requires at least one of GIGACREW_SELLER_PRIVATE_KEY or GIGACREW_BUYER_PRIVATE_KEY\");\n        }\n\n        this.db = new GigaCrewDatabase(this.runtime.databaseAdapter.db);\n\n        if (this.seller) {\n            if (!this.config.GIGACREW_SERVICE_ID) {\n                throw new Error(\"GigaCrew client requires GIGACREW_SERVICE_ID when acting as a seller\");\n            }\n\n            this.sellerHandler = new GigaCrewSellerHandler(this.runtime, this.seller, this.contract, this.config, this.db, worker);\n        }\n\n        if (this.buyer) {\n            if (!this.config.GIGACREW_INDEXER_URL) {\n                throw new Error(\"GigaCrew client requires GIGACREW_INDEXER_URL when acting as a buyer\");\n            }\n            this.buyerHandler = new GigaCrewBuyerHandler(this.runtime, this.buyer, this.contract, this.config, this.db, processWork);\n        } else {\n            const index = this.runtime.actions.findIndex(action => action.name === \"HIRE_AGENT\");\n            if (index === -1) {\n                throw new Error(\"Couldn't find HIRE_AGENT action for removal\");\n            }\n            this.runtime.actions.splice(index, 1);\n            elizaLogger.info(\"Gigacrew Client: Removed HIRE_AGENT action for non buyer agent\");\n        }\n\n        this.filters = [];\n    }\n\n    async start() {\n        if (this.seller) {\n            elizaLogger.info(\"Gigacrew Client: Starting seller handler\");\n            this.filters.push(...await this.sellerHandler.filters());\n            this.sellerHandler.start();\n        }\n        if (this.buyer) {\n            elizaLogger.info(\"Gigacrew Client: Starting buyer handler\");\n            this.filters.push(...await this.buyerHandler.filters());\n            this.buyerHandler.start();\n        }\n\n        let fromBlock = 0;\n        if (this.config.GIGACREW_FORCE_FROM_BLOCK) {\n            fromBlock = this.config.GIGACREW_FROM_BLOCK;\n        } else {\n            fromBlock = Math.max(this.config.GIGACREW_FROM_BLOCK, await this.runtime.cacheManager.get(\"gigacrew_last_block\") || 0);\n        }\n        elizaLogger.info(\"Gigacrew Event Listener: Start\", { lastBlock: fromBlock });\n        this.listen(fromBlock);\n    }\n\n    async listen(fromBlock: number) {\n        let toBlock = await this.provider.getBlockNumber();\n        if (toBlock < fromBlock) {\n            setTimeout(() => {\n                this.listen(fromBlock);\n            }, 5000);\n            return;\n        }\n\n        for (const filter of this.filters) {\n            const events = await this.contract.queryFilter(filter.event, fromBlock as BlockTag, toBlock as BlockTag);\n            events.forEach(filter.handler);\n        }\n\n        await this.runtime.cacheManager.set(\"gigacrew_last_block\", toBlock);\n\n        setTimeout(() => {\n            this.listen(toBlock + 1);\n        }, 5000);\n    }\n}\n\nexport class GigaCrew implements Client {\n    worker = workResponseGenerator;\n    processWork: ProcessWorkFunction | null;\n\n    async start(runtime: IAgentRuntime) {\n        const config = getGigaCrewConfig(runtime);\n        const client = new GigaCrewClient(runtime, config, this.worker, this.processWork);\n        await client.start();\n        return client;\n    }\n\n    async stop(_runtime: IAgentRuntime) {\n        console.warn(\"GigaCrew client does not support stopping yet\");\n    }\n};\n","import { IAgentRuntime } from \"@elizaos/core\";\n\nexport interface GigaCrewConfig {\n    GIGACREW_PROVIDER_URL: string;\n    GIGACREW_CONTRACT_ADDRESS: string;\n    GIGACREW_SELLER_PRIVATE_KEY: string;\n    GIGACREW_SELLER_ADDRESS: string;\n    GIGACREW_BUYER_PRIVATE_KEY: string;\n    GIGACREW_BUYER_ADDRESS: string;\n    GIGACREW_SERVICE_ID: string;\n    GIGACREW_TIME_PER_SERVICE: number;\n    GIGACREW_TIME_BUFFER: number;\n    GIGACREW_FROM_BLOCK: number;\n    GIGACREW_INDEXER_URL: string;\n    GIGACREW_FORCE_FROM_BLOCK: boolean;\n}\n\nexport function getGigaCrewConfig(runtime: IAgentRuntime): GigaCrewConfig {\n\n    const gigacrewConfig: GigaCrewConfig = {\n        GIGACREW_PROVIDER_URL: runtime.getSetting(\"GIGACREW_PROVIDER_URL\") || process.env.GIGACREW_PROVIDER_URL,\n        GIGACREW_CONTRACT_ADDRESS: runtime.getSetting(\"GIGACREW_CONTRACT_ADDRESS\") || process.env.GIGACREW_CONTRACT_ADDRESS,\n        GIGACREW_SELLER_PRIVATE_KEY: runtime.getSetting(\"GIGACREW_SELLER_PRIVATE_KEY\") || process.env.GIGACREW_SELLER_PRIVATE_KEY,\n        GIGACREW_SELLER_ADDRESS: runtime.getSetting(\"GIGACREW_SELLER_ADDRESS\") || process.env.GIGACREW_SELLER_ADDRESS,\n        GIGACREW_BUYER_PRIVATE_KEY: runtime.getSetting(\"GIGACREW_BUYER_PRIVATE_KEY\") || process.env.GIGACREW_BUYER_PRIVATE_KEY,\n        GIGACREW_BUYER_ADDRESS: runtime.getSetting(\"GIGACREW_BUYER_ADDRESS\") || process.env.GIGACREW_BUYER_ADDRESS,\n        GIGACREW_SERVICE_ID: runtime.getSetting(\"GIGACREW_SERVICE_ID\") || process.env.GIGACREW_SERVICE_ID,\n        GIGACREW_TIME_PER_SERVICE: parseInt(runtime.getSetting(\"GIGACREW_TIME_PER_SERVICE\") || process.env.GIGACREW_TIME_PER_SERVICE || \"0\"),\n        GIGACREW_TIME_BUFFER: parseInt(runtime.getSetting(\"GIGACREW_TIME_BUFFER\") || process.env.GIGACREW_TIME_BUFFER || \"0\"),\n        GIGACREW_FROM_BLOCK: parseInt(runtime.getSetting(\"GIGACREW_FROM_BLOCK\") || process.env.GIGACREW_FROM_BLOCK || \"0\"),\n        GIGACREW_INDEXER_URL: runtime.getSetting(\"GIGACREW_INDEXER_URL\") || process.env.GIGACREW_INDEXER_URL,\n        GIGACREW_FORCE_FROM_BLOCK: (runtime.getSetting(\"GIGACREW_FORCE_FROM_BLOCK\") || process.env.GIGACREW_FORCE_FROM_BLOCK || \"false\") === \"true\",\n    }\n\n    return gigacrewConfig;\n}\n\nexport default getGigaCrewConfig;\n","{\"abi\":[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_judges\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"createEscrow\",\"inputs\":[{\"name\":\"_orderId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"_seller\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_deadlinePeriod\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_proposalExpiry\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_proposalSignature\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"payable\"},{\"type\":\"function\",\"name\":\"disputeResolutionPeriod\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"disputeResult\",\"inputs\":[{\"name\":\"_orderId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"buyerShare\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"disputes\",\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"buyerShare\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"votes\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"escrows\",\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"buyer\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"seller\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"status\",\"type\":\"uint8\",\"internalType\":\"enum GigaCrew.EscrowStatus\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"judgeVotes\",\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"judges\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"lastServiceId\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"lockPeriod\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pauseService\",\"inputs\":[{\"name\":\"_serviceId\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"pows\",\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"work\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"timestamp\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerService\",\"inputs\":[{\"name\":\"_title\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"_description\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"_communicationChannel\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[{\"name\":\"service_id\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"resumeService\",\"inputs\":[{\"name\":\"_serviceId\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"services\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"paused\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"provider\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"title\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"description\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"communicationChannel\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"submitDispute\",\"inputs\":[{\"name\":\"_orderId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"submitPoW\",\"inputs\":[{\"name\":\"_orderId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"_work\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"voteOnDispute\",\"inputs\":[{\"name\":\"_orderId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"_judgeId\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_buyerShare\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"withdrawFunds\",\"inputs\":[{\"name\":\"_orderId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"_signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"DisputeVote\",\"inputs\":[{\"name\":\"orderId\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"judgeId\",\"type\":\"uint256\",\"indexed\":true,\"internalType\":\"uint256\"},{\"name\":\"buyerShare\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"EscrowCreated\",\"inputs\":[{\"name\":\"orderId\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"buyer\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"seller\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"EscrowDisputed\",\"inputs\":[{\"name\":\"orderId\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"disputeResolutionPeriod\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"FundsWithdrawn\",\"inputs\":[{\"name\":\"orderId\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"to\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PoWSubmitted\",\"inputs\":[{\"name\":\"orderId\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"buyer\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"seller\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"work\",\"type\":\"string\",\"indexed\":false,\"internalType\":\"string\"},{\"name\":\"lockPeriod\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"ServicePaused\",\"inputs\":[{\"name\":\"serviceId\",\"type\":\"uint256\",\"indexed\":true,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"ServiceRegistered\",\"inputs\":[{\"name\":\"serviceId\",\"type\":\"uint256\",\"indexed\":true,\"internalType\":\"uint256\"},{\"name\":\"provider\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"ServiceResumed\",\"inputs\":[{\"name\":\"serviceId\",\"type\":\"uint256\",\"indexed\":true,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"AlreadyVoted\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"DeadlineAlreadyPassed\",\"inputs\":[{\"name\":\"deadline\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"type\":\"error\",\"name\":\"DeadlineNotPassed\",\"inputs\":[{\"name\":\"deadline\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"type\":\"error\",\"name\":\"DisputeResolutionPeriodNotPassed\",\"inputs\":[{\"name\":\"deadline\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"type\":\"error\",\"name\":\"DisputeResolutionPeriodPassed\",\"inputs\":[{\"name\":\"deadline\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"type\":\"error\",\"name\":\"ECDSAInvalidSignature\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ECDSAInvalidSignatureLength\",\"inputs\":[{\"name\":\"length\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"type\":\"error\",\"name\":\"ECDSAInvalidSignatureS\",\"inputs\":[{\"name\":\"s\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"type\":\"error\",\"name\":\"EmptyWork\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"EscrowAlreadyExists\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"EscrowAlreadyWithdrawn\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"EscrowNotPending\",\"inputs\":[{\"name\":\"status\",\"type\":\"uint8\",\"internalType\":\"enum GigaCrew.EscrowStatus\"}]},{\"type\":\"error\",\"name\":\"EscrowWithoutEnoughFunding\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidBuyerShare\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidOrderId\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidServiceId\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidSignature\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"LockPeriodNotPassed\",\"inputs\":[{\"name\":\"lockDeadline\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"type\":\"error\",\"name\":\"MustBeBuyer\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"MustBeJudge\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"MustBeSeller\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"NoDispute\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"PoWAlreadySubmitted\",\"inputs\":[{\"name\":\"submissionTimestamp\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"type\":\"error\",\"name\":\"PoWNotSubmitted\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ProposalExpired\",\"inputs\":[]}],\"bytecode\":{\"object\":\"0x6080604052603c600055603c60015534801561001a57600080fd5b50604051612119380380612119833981016040819052610039916100ff565b805161004c906002906020840190610053565b50506101ce565b8280548282559060005260206000209081019282156100a8579160200282015b828111156100a857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610073565b506100b49291506100b8565b5090565b5b808211156100b457600081556001016100b9565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146100fa57600080fd5b919050565b60006020828403121561011157600080fd5b81516001600160401b0381111561012757600080fd5b8201601f8101841361013857600080fd5b80516001600160401b03811115610151576101516100cd565b604051600582901b90603f8201601f191681016001600160401b038111828210171561017f5761017f6100cd565b60405291825260208184018101929081018784111561019d57600080fd5b6020850194505b838510156101c3576101b5856100e3565b8152602094850194016101a4565b509695505050505050565b611f3c806101dd6000396000f3fe6080604052600436106101095760003560e01c80639d5783e811610095578063c22c4f4311610064578063c22c4f4314610375578063df30796e146103a6578063ecb7dbe9146103c6578063ed422358146103dc578063ef57d884146103fc57600080fd5b80639d5783e8146102cf578063b06b0368146102fd578063b1f6eb6f14610335578063b24945c21461035557600080fd5b80634758406a116100dc5780634758406a1461021b5780634911bfe51461023b5780636613ff341461024e578063833a10311461026e5780638db9cb87146102b957600080fd5b806311be19971461010e5780632d83549c1461016a57806331327ee8146101d55780633fd8b02f146101f7575b600080fd5b34801561011a57600080fd5b5061014a610129366004611951565b60066020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b34801561017657600080fd5b506101c4610185366004611951565b6004602081905260009182526040909120805460018201546002830154600384015493909401546001600160a01b039283169492909116929060ff1685565b6040516101619594939291906119a2565b3480156101e157600080fd5b506101f56101f0366004611a8b565b61041c565b005b34801561020357600080fd5b5061020d60005481565b604051908152602001610161565b34801561022757600080fd5b506101f5610236366004611a8b565b6105bf565b6101f5610249366004611ad2565b610c53565b34801561025a57600080fd5b506101f5610269366004611951565b610e6d565b34801561027a57600080fd5b506102a9610289366004611b4b565b600760209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610161565b3480156102c557600080fd5b5061020d60085481565b3480156102db57600080fd5b506102ef6102ea366004611951565b610ee9565b604051610161929190611bb3565b34801561030957600080fd5b5061031d610318366004611951565b610f8d565b6040516001600160a01b039091168152602001610161565b34801561034157600080fd5b5061020d610350366004611951565b610fb7565b34801561036157600080fd5b506101f5610370366004611bd5565b61105c565b34801561038157600080fd5b50610395610390366004611951565b61122a565b604051610161959493929190611c01565b3480156103b257600080fd5b506101f56103c1366004611951565b6113ff565b3480156103d257600080fd5b5061020d60015481565b3480156103e857600080fd5b506101f56103f7366004611951565b61156a565b34801561040857600080fd5b5061020d610417366004611c5f565b6115e9565b81610426816116e7565b6000818152600460205260409020600101546001600160a01b031633146104605760405163fa642e6360e01b815260040160405180910390fd5b600083815260056020526040902060010154156104ac576000838152600560205260409081902060010154905163dbb03dd160e01b815260048101919091526024015b60405180910390fd5b6000838152600460205260409020600301544211156104f6576000838152600460208190526040918290206003015491516311a4f1f760e21b81526104a392910190815260200190565b815160000361051857604051631ea15b4b60e21b815260040160405180910390fd5b6040805180820182528381524260208083019190915260008681526005909152919091208151819061054a9082611d75565b50602091820151600190910155600084815260049091526040812054905433916001600160a01b03169085907fbedefd4a001fa8e49eeb9a2e1cd69a92fc589731fa99027cc6c4c1a360f546fa9086906105a49042611e4a565b6040516105b2929190611bb3565b60405180910390a4505050565b816105c9816116e7565b6000838152600460208190526040909120808201546001820154825460029093015460ff909216936001600160a01b039182169390911691908460048111156106145761061461196a565b03610632576040516372d3fbd360e01b815260040160405180910390fd5b60028460048111156106465761064661196a565b03610708576000606461065889610fb7565b6106629084611e5d565b61066c9190611e74565b6106769083611e96565b60008981526004602081905260408083208201805460ff1916909217909155519192506001600160a01b038616916108fc84150291849190818181858888f193505050501580156106cb573d6000803e3d6000fd5b50836001600160a01b031688600080516020611ee7833981519152836040516106f691815260200190565b60405180910390a35050505050505050565b600384600481111561071c5761071c61196a565b036107c2576000606461072e89610fb7565b6107389084611e5d565b6107429190611e74565b60008981526004602081905260408083208201805460ff1916909217909155519192506001600160a01b038516916108fc84150291849190818181858888f19350505050158015610797573d6000803e3d6000fd5b50826001600160a01b031688600080516020611ee7833981519152836040516106f691815260200190565b8551156108035760405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b5c1b195b595b9d1959608a1b60448201526064016104a3565b60018460048111156108175761081761196a565b03610a8557600061082788610fb7565b9050806000036108ad5760008881526004602081905260408083208201805460ff1916909217909155516001600160a01b038616916108fc851502918591818181858888f19350505050158015610882573d6000803e3d6000fd5b50836001600160a01b031688600080516020611ee7833981519152846040516106f691815260200190565b806064036109315760008881526004602081905260408083208201805460ff1916909217909155516001600160a01b038516916108fc851502918591818181858888f19350505050158015610906573d6000803e3d6000fd5b50826001600160a01b031688600080516020611ee7833981519152846040516106f691815260200190565b606461093d8284611e5d565b6109479190611e74565b905060006109558284611e96565b90506001600160a01b03841633036109f6576000898152600460208190526040808320909101805460ff19166002179055516001600160a01b038616916108fc851502918591818181858888f193505050501580156109b8573d6000803e3d6000fd5b50836001600160a01b031689600080516020611ee7833981519152846040516109e391815260200190565b60405180910390a3505050505050505050565b6001600160a01b0385163303610a82576000898152600460208190526040808320909101805460ff19166003179055516001600160a01b038716916108fc841502918491818181858888f19350505050158015610a57573d6000803e3d6000fd5b50846001600160a01b031689600080516020611ee7833981519152836040516109e391815260200190565b50505b60008781526005602052604090206001015415610b8957600080548882526005602052604090912060010154610abb9190611e4a565b4211610afc57600080548882526005602052604090912060010154610ae09190611e4a565b6040516303e7ea8d60e51b81526004016104a391815260200190565b60008781526004602081905260408083208201805460ff1916909217909155516001600160a01b038516916108fc841502918491818181858888f19350505050158015610b4d573d6000803e3d6000fd5b50826001600160a01b031687600080516020611ee783398151915283604051610b7891815260200190565b60405180910390a350505050505050565b6000878152600460205260409020600301544211610bd25760008781526004602081905260409182902060030154915163336d9e1760e01b81526104a392910190815260200190565b60008781526004602081905260408083208201805460ff1916909217909155516001600160a01b038416916108fc841502918491818181858888f19350505050158015610c23573d6000803e3d6000fd5b50816001600160a01b031687600080516020611ee783398151915283604051610b7891815260200190565b505050565b60008581526004602052604090206003015415610c835760405163ed77877960e01b815260040160405180910390fd5b81421115610ca4576040516328a7237960e01b815260040160405180910390fd5b6040805172023b4b3b0a1b932bb90283937b837b9b0b61d1606d1b60208201529081018690526060810183905234608082015260a0810184905260009060c0016040516020818303038152906040528051906020012090506000610d08828461171b565b9050856001600160a01b0316816001600160a01b031614610d3c57604051638baa579f60e01b815260040160405180910390fd5b6000610d488642611e4a565b90506040518060a00160405280336001600160a01b03168152602001886001600160a01b0316815260200134815260200182815260200160006004811115610d9257610d9261196a565b9052600089815260046020818152604092839020845181546001600160a01b039182166001600160a01b03199182161783559286015160018084018054929093169190941617905592840151600284015560608401516003840155608084015183830180549193909260ff1990921691908490811115610e1457610e1461196a565b02179055505060408051348152602081018490526001600160a01b038a16925033918b917f8233ac661360194ba2d16fa02d354d092808769225032c46dc5787f33af21cbe910160405180910390a45050505050505050565b60008181526003602052604090205461010090046001600160a01b03163314610ea95760405163fa642e6360e01b815260040160405180910390fd5b600081815260036020526040808220805460ff191690555182917f9857dfdcdf9b2394a8313dc1009272759f78bed5734340044e63c373145b6b0a91a250565b600560205260009081526040902080548190610f0490611cf3565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3090611cf3565b8015610f7d5780601f10610f5257610100808354040283529160200191610f7d565b820191906000526020600020905b815481529060010190602001808311610f6057829003601f168201915b5050505050908060010154905082565b60028181548110610f9d57600080fd5b6000918252602090912001546001600160a01b0316905081565b600081610fc381611747565b600154600084815260066020526040902060020154610fe29190611e4a565b4211611023576001546000848152600660205260409020600201546110079190611e4a565b6040516332c6b2c360e01b81526004016104a391815260200190565b60008381526006602052604081206001015490036110445760009150611056565b60008381526006602052604090205491505b50919050565b828261106782611747565b6002818154811061107a5761107a611ea9565b6000918252602090912001546001600160a01b031633146110ae5760405163a1f19a5b60e01b815260040160405180910390fd5b600085815260076020908152604080832087845290915290205460ff16156110e957604051637c9a1cf960e01b815260040160405180910390fd5b600154600086815260066020526040902060020154429161110991611e4a565b101561114a5760015460008681526006602052604090206002015461112e9190611e4a565b604051630ed9be0960e01b81526004016104a391815260200190565b606483111561116c57604051636c92019160e11b815260040160405180910390fd5b60008581526007602090815260408083208784528252808320805460ff19166001908117909155888452600690925290912080820154905490916111b1908390611e4a565b856111bc8484611e5d565b6111c69190611e4a565b6111d09190611e74565b600088815260066020526040812091825560019091018054916111f283611ebf565b919050555085877fa2d70005865a036ae7f5ead532d6e40553951ef1ae66e00db5317010000db0a687604051610b7891815260200190565b6003602052600090815260409020805460018201805460ff8316936101009093046001600160a01b031692919061126090611cf3565b80601f016020809104026020016040519081016040528092919081815260200182805461128c90611cf3565b80156112d95780601f106112ae576101008083540402835291602001916112d9565b820191906000526020600020905b8154815290600101906020018083116112bc57829003601f168201915b5050505050908060020180546112ee90611cf3565b80601f016020809104026020016040519081016040528092919081815260200182805461131a90611cf3565b80156113675780601f1061133c57610100808354040283529160200191611367565b820191906000526020600020905b81548152906001019060200180831161134a57829003601f168201915b50505050509080600301805461137c90611cf3565b80601f01602080910402602001604051908101604052809291908181526020018280546113a890611cf3565b80156113f55780601f106113ca576101008083540402835291602001916113f5565b820191906000526020600020905b8154815290600101906020018083116113d857829003601f168201915b5050505050905085565b80611409816116e7565b6000818152600460205260409020546001600160a01b0316331461144057604051633192ea7760e01b815260040160405180910390fd5b6000828152600460208190526040822081015460ff16908111156114665761146661196a565b1461149a57600082815260046020819052604091829020810154915163da72081760e01b81526104a39260ff169101611ed8565b60008281526005602052604081206001015490036114cb576040516317c12a4960e31b815260040160405180910390fd5b6000828152600460208181526040808420909201805460ff19166001908117909155825160608101845284815280830185815242828601818152898852600690955294909520905181559351848201559051600290930192909255905483917fdcad9437198a33de136a2cf6a229ed07367ec6f99a6958d0aa2ee9ea08353f399161155591611e4a565b60405190815260200160405180910390a25050565b60008181526003602052604090205461010090046001600160a01b031633146115a65760405163fa642e6360e01b815260040160405180910390fd5b600081815260036020526040808220805460ff191660011790555182917fb62855a8e0d386952ecee37e0aa2de7c75b0de504a3a04b8345c22f0bbd31b1591a250565b6008546040805160a081018252600080825233602080840191825283850189815260608501899052608085018890528684526003909152939091208251815492516001600160a81b0319909316901515610100600160a81b031916176101006001600160a01b0390931692909202919091178155915190919060018201906116719082611d75565b50606082015160028201906116869082611d75565b506080820151600382019061169b9082611d75565b505060405133915082907ffcd335a152e711f7e0e74487e27043f438dc7e73d600889758eb946a0192c3e090600090a3600880549060006116db83611ebf565b91905055509392505050565b600081815260046020526040812060030154900361171857604051635d70603360e01b815260040160405180910390fd5b50565b60008060008061172b8686611778565b92509250925061173b82826117c5565b50909150505b92915050565b60008181526006602052604081206002015490036117185760405163126ea8e960e31b815260040160405180910390fd5b600080600083516041036117b25760208401516040850151606086015160001a6117a488828585611882565b9550955095505050506117be565b50508151600091506002905b9250925092565b60008260038111156117d9576117d961196a565b036117e2575050565b60018260038111156117f6576117f661196a565b036118145760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156118285761182861196a565b036118495760405163fce698f760e01b8152600481018290526024016104a3565b600382600381111561185d5761185d61196a565b0361187e576040516335e2f38360e21b8152600481018290526024016104a3565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156118bd5750600091506003905082611947565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611911573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661193d57506000925060019150829050611947565b9250600091508190505b9450945094915050565b60006020828403121561196357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6005811061199e57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b03868116825285166020820152604081018490526060810183905260a081016119d56080830184611980565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a0657600080fd5b81356020830160008067ffffffffffffffff841115611a2757611a276119df565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff82111715611a5657611a566119df565b604052838152905080828401871015611a6e57600080fd5b838360208301376000602085830101528094505050505092915050565b60008060408385031215611a9e57600080fd5b82359150602083013567ffffffffffffffff811115611abc57600080fd5b611ac8858286016119f5565b9150509250929050565b600080600080600060a08688031215611aea57600080fd5b8535945060208601356001600160a01b0381168114611b0857600080fd5b93506040860135925060608601359150608086013567ffffffffffffffff811115611b3257600080fd5b611b3e888289016119f5565b9150509295509295909350565b60008060408385031215611b5e57600080fd5b50508035926020909101359150565b6000815180845260005b81811015611b9357602081850181015186830182015201611b77565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000611bc66040830185611b6d565b90508260208301529392505050565b600080600060608486031215611bea57600080fd5b505081359360208301359350604090920135919050565b85151581526001600160a01b038516602082015260a060408201819052600090611c2d90830186611b6d565b8281036060840152611c3f8186611b6d565b90508281036080840152611c538185611b6d565b98975050505050505050565b600080600060608486031215611c7457600080fd5b833567ffffffffffffffff811115611c8b57600080fd5b611c97868287016119f5565b935050602084013567ffffffffffffffff811115611cb457600080fd5b611cc0868287016119f5565b925050604084013567ffffffffffffffff811115611cdd57600080fd5b611ce9868287016119f5565b9150509250925092565b600181811c90821680611d0757607f821691505b60208210810361105657634e487b7160e01b600052602260045260246000fd5b601f821115610c4e57806000526020600020601f840160051c81016020851015611d4e5750805b601f840160051c820191505b81811015611d6e5760008155600101611d5a565b5050505050565b815167ffffffffffffffff811115611d8f57611d8f6119df565b611da381611d9d8454611cf3565b84611d27565b6020601f821160018114611dd75760008315611dbf5750848201515b600019600385901b1c1916600184901b178455611d6e565b600084815260208120601f198516915b82811015611e075787850151825560209485019460019092019101611de7565b5084821015611e255786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082018082111561174157611741611e34565b808202811582820484141761174157611741611e34565b600082611e9157634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561174157611741611e34565b634e487b7160e01b600052603260045260246000fd5b600060018201611ed157611ed1611e34565b5060010190565b60208101611741828461198056fe13e7ed68a0fe9e4bcafdde5f49381514a9ee7e34ff7d926eadab64c1e0e77f16a2646970667358221220a13610c2278f229e1cf91f1e3fefcd3015c6f817cc9fb642a6568562cc04563764736f6c634300081b0033\",\"sourceMap\":\"128:13589:19:-:0;;;235:9;207:37;;291:9;250:50;;4119:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4167:16;;;;:6;;:16;;;;;:::i;:::-;;4119:71;128:13589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;128:13589:19;-1:-1:-1;;;;;128:13589:19;;;;;;;;;;;-1:-1:-1;128:13589:19;;;;;;;-1:-1:-1;128:13589:19;;;-1:-1:-1;128:13589:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:21;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:177;225:13;;-1:-1:-1;;;;;267:31:21;;257:42;;247:70;;313:1;310;303:12;247:70;146:177;;;:::o;328:1135::-;423:6;476:2;464:9;455:7;451:23;447:32;444:52;;;492:1;489;482:12;444:52;519:16;;-1:-1:-1;;;;;547:30:21;;544:50;;;590:1;587;580:12;544:50;613:22;;666:4;658:13;;654:27;-1:-1:-1;644:55:21;;695:1;692;685:12;644:55;722:9;;-1:-1:-1;;;;;743:30:21;;740:56;;;776:18;;:::i;:::-;858:2;852:9;819:1;815:14;;;;912:2;904:11;;-1:-1:-1;;900:25:21;888:38;;-1:-1:-1;;;;;941:34:21;;977:22;;;938:62;935:88;;;1003:18;;:::i;:::-;1039:2;1032:22;1089;;;1139:2;1169:11;;;1165:20;;;1089:22;1127:15;;1197:19;;;1194:39;;;1229:1;1226;1219:12;1194:39;1261:2;1257;1253:11;1242:22;;1273:159;1289:6;1284:3;1281:15;1273:159;;;1355:34;1385:3;1355:34;:::i;:::-;1343:47;;1419:2;1306:12;;;;1410;1273:159;;;-1:-1:-1;1451:6:21;328:1135;-1:-1:-1;;;;;;328:1135:21:o;:::-;128:13589:19;;;;;;\",\"linkReferences\":{}},\"deployedBytecode\":{\"object\":\"0x6080604052600436106101095760003560e01c80639d5783e811610095578063c22c4f4311610064578063c22c4f4314610375578063df30796e146103a6578063ecb7dbe9146103c6578063ed422358146103dc578063ef57d884146103fc57600080fd5b80639d5783e8146102cf578063b06b0368146102fd578063b1f6eb6f14610335578063b24945c21461035557600080fd5b80634758406a116100dc5780634758406a1461021b5780634911bfe51461023b5780636613ff341461024e578063833a10311461026e5780638db9cb87146102b957600080fd5b806311be19971461010e5780632d83549c1461016a57806331327ee8146101d55780633fd8b02f146101f7575b600080fd5b34801561011a57600080fd5b5061014a610129366004611951565b60066020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b34801561017657600080fd5b506101c4610185366004611951565b6004602081905260009182526040909120805460018201546002830154600384015493909401546001600160a01b039283169492909116929060ff1685565b6040516101619594939291906119a2565b3480156101e157600080fd5b506101f56101f0366004611a8b565b61041c565b005b34801561020357600080fd5b5061020d60005481565b604051908152602001610161565b34801561022757600080fd5b506101f5610236366004611a8b565b6105bf565b6101f5610249366004611ad2565b610c53565b34801561025a57600080fd5b506101f5610269366004611951565b610e6d565b34801561027a57600080fd5b506102a9610289366004611b4b565b600760209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610161565b3480156102c557600080fd5b5061020d60085481565b3480156102db57600080fd5b506102ef6102ea366004611951565b610ee9565b604051610161929190611bb3565b34801561030957600080fd5b5061031d610318366004611951565b610f8d565b6040516001600160a01b039091168152602001610161565b34801561034157600080fd5b5061020d610350366004611951565b610fb7565b34801561036157600080fd5b506101f5610370366004611bd5565b61105c565b34801561038157600080fd5b50610395610390366004611951565b61122a565b604051610161959493929190611c01565b3480156103b257600080fd5b506101f56103c1366004611951565b6113ff565b3480156103d257600080fd5b5061020d60015481565b3480156103e857600080fd5b506101f56103f7366004611951565b61156a565b34801561040857600080fd5b5061020d610417366004611c5f565b6115e9565b81610426816116e7565b6000818152600460205260409020600101546001600160a01b031633146104605760405163fa642e6360e01b815260040160405180910390fd5b600083815260056020526040902060010154156104ac576000838152600560205260409081902060010154905163dbb03dd160e01b815260048101919091526024015b60405180910390fd5b6000838152600460205260409020600301544211156104f6576000838152600460208190526040918290206003015491516311a4f1f760e21b81526104a392910190815260200190565b815160000361051857604051631ea15b4b60e21b815260040160405180910390fd5b6040805180820182528381524260208083019190915260008681526005909152919091208151819061054a9082611d75565b50602091820151600190910155600084815260049091526040812054905433916001600160a01b03169085907fbedefd4a001fa8e49eeb9a2e1cd69a92fc589731fa99027cc6c4c1a360f546fa9086906105a49042611e4a565b6040516105b2929190611bb3565b60405180910390a4505050565b816105c9816116e7565b6000838152600460208190526040909120808201546001820154825460029093015460ff909216936001600160a01b039182169390911691908460048111156106145761061461196a565b03610632576040516372d3fbd360e01b815260040160405180910390fd5b60028460048111156106465761064661196a565b03610708576000606461065889610fb7565b6106629084611e5d565b61066c9190611e74565b6106769083611e96565b60008981526004602081905260408083208201805460ff1916909217909155519192506001600160a01b038616916108fc84150291849190818181858888f193505050501580156106cb573d6000803e3d6000fd5b50836001600160a01b031688600080516020611ee7833981519152836040516106f691815260200190565b60405180910390a35050505050505050565b600384600481111561071c5761071c61196a565b036107c2576000606461072e89610fb7565b6107389084611e5d565b6107429190611e74565b60008981526004602081905260408083208201805460ff1916909217909155519192506001600160a01b038516916108fc84150291849190818181858888f19350505050158015610797573d6000803e3d6000fd5b50826001600160a01b031688600080516020611ee7833981519152836040516106f691815260200190565b8551156108035760405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b5c1b195b595b9d1959608a1b60448201526064016104a3565b60018460048111156108175761081761196a565b03610a8557600061082788610fb7565b9050806000036108ad5760008881526004602081905260408083208201805460ff1916909217909155516001600160a01b038616916108fc851502918591818181858888f19350505050158015610882573d6000803e3d6000fd5b50836001600160a01b031688600080516020611ee7833981519152846040516106f691815260200190565b806064036109315760008881526004602081905260408083208201805460ff1916909217909155516001600160a01b038516916108fc851502918591818181858888f19350505050158015610906573d6000803e3d6000fd5b50826001600160a01b031688600080516020611ee7833981519152846040516106f691815260200190565b606461093d8284611e5d565b6109479190611e74565b905060006109558284611e96565b90506001600160a01b03841633036109f6576000898152600460208190526040808320909101805460ff19166002179055516001600160a01b038616916108fc851502918591818181858888f193505050501580156109b8573d6000803e3d6000fd5b50836001600160a01b031689600080516020611ee7833981519152846040516109e391815260200190565b60405180910390a3505050505050505050565b6001600160a01b0385163303610a82576000898152600460208190526040808320909101805460ff19166003179055516001600160a01b038716916108fc841502918491818181858888f19350505050158015610a57573d6000803e3d6000fd5b50846001600160a01b031689600080516020611ee7833981519152836040516109e391815260200190565b50505b60008781526005602052604090206001015415610b8957600080548882526005602052604090912060010154610abb9190611e4a565b4211610afc57600080548882526005602052604090912060010154610ae09190611e4a565b6040516303e7ea8d60e51b81526004016104a391815260200190565b60008781526004602081905260408083208201805460ff1916909217909155516001600160a01b038516916108fc841502918491818181858888f19350505050158015610b4d573d6000803e3d6000fd5b50826001600160a01b031687600080516020611ee783398151915283604051610b7891815260200190565b60405180910390a350505050505050565b6000878152600460205260409020600301544211610bd25760008781526004602081905260409182902060030154915163336d9e1760e01b81526104a392910190815260200190565b60008781526004602081905260408083208201805460ff1916909217909155516001600160a01b038416916108fc841502918491818181858888f19350505050158015610c23573d6000803e3d6000fd5b50816001600160a01b031687600080516020611ee783398151915283604051610b7891815260200190565b505050565b60008581526004602052604090206003015415610c835760405163ed77877960e01b815260040160405180910390fd5b81421115610ca4576040516328a7237960e01b815260040160405180910390fd5b6040805172023b4b3b0a1b932bb90283937b837b9b0b61d1606d1b60208201529081018690526060810183905234608082015260a0810184905260009060c0016040516020818303038152906040528051906020012090506000610d08828461171b565b9050856001600160a01b0316816001600160a01b031614610d3c57604051638baa579f60e01b815260040160405180910390fd5b6000610d488642611e4a565b90506040518060a00160405280336001600160a01b03168152602001886001600160a01b0316815260200134815260200182815260200160006004811115610d9257610d9261196a565b9052600089815260046020818152604092839020845181546001600160a01b039182166001600160a01b03199182161783559286015160018084018054929093169190941617905592840151600284015560608401516003840155608084015183830180549193909260ff1990921691908490811115610e1457610e1461196a565b02179055505060408051348152602081018490526001600160a01b038a16925033918b917f8233ac661360194ba2d16fa02d354d092808769225032c46dc5787f33af21cbe910160405180910390a45050505050505050565b60008181526003602052604090205461010090046001600160a01b03163314610ea95760405163fa642e6360e01b815260040160405180910390fd5b600081815260036020526040808220805460ff191690555182917f9857dfdcdf9b2394a8313dc1009272759f78bed5734340044e63c373145b6b0a91a250565b600560205260009081526040902080548190610f0490611cf3565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3090611cf3565b8015610f7d5780601f10610f5257610100808354040283529160200191610f7d565b820191906000526020600020905b815481529060010190602001808311610f6057829003601f168201915b5050505050908060010154905082565b60028181548110610f9d57600080fd5b6000918252602090912001546001600160a01b0316905081565b600081610fc381611747565b600154600084815260066020526040902060020154610fe29190611e4a565b4211611023576001546000848152600660205260409020600201546110079190611e4a565b6040516332c6b2c360e01b81526004016104a391815260200190565b60008381526006602052604081206001015490036110445760009150611056565b60008381526006602052604090205491505b50919050565b828261106782611747565b6002818154811061107a5761107a611ea9565b6000918252602090912001546001600160a01b031633146110ae5760405163a1f19a5b60e01b815260040160405180910390fd5b600085815260076020908152604080832087845290915290205460ff16156110e957604051637c9a1cf960e01b815260040160405180910390fd5b600154600086815260066020526040902060020154429161110991611e4a565b101561114a5760015460008681526006602052604090206002015461112e9190611e4a565b604051630ed9be0960e01b81526004016104a391815260200190565b606483111561116c57604051636c92019160e11b815260040160405180910390fd5b60008581526007602090815260408083208784528252808320805460ff19166001908117909155888452600690925290912080820154905490916111b1908390611e4a565b856111bc8484611e5d565b6111c69190611e4a565b6111d09190611e74565b600088815260066020526040812091825560019091018054916111f283611ebf565b919050555085877fa2d70005865a036ae7f5ead532d6e40553951ef1ae66e00db5317010000db0a687604051610b7891815260200190565b6003602052600090815260409020805460018201805460ff8316936101009093046001600160a01b031692919061126090611cf3565b80601f016020809104026020016040519081016040528092919081815260200182805461128c90611cf3565b80156112d95780601f106112ae576101008083540402835291602001916112d9565b820191906000526020600020905b8154815290600101906020018083116112bc57829003601f168201915b5050505050908060020180546112ee90611cf3565b80601f016020809104026020016040519081016040528092919081815260200182805461131a90611cf3565b80156113675780601f1061133c57610100808354040283529160200191611367565b820191906000526020600020905b81548152906001019060200180831161134a57829003601f168201915b50505050509080600301805461137c90611cf3565b80601f01602080910402602001604051908101604052809291908181526020018280546113a890611cf3565b80156113f55780601f106113ca576101008083540402835291602001916113f5565b820191906000526020600020905b8154815290600101906020018083116113d857829003601f168201915b5050505050905085565b80611409816116e7565b6000818152600460205260409020546001600160a01b0316331461144057604051633192ea7760e01b815260040160405180910390fd5b6000828152600460208190526040822081015460ff16908111156114665761146661196a565b1461149a57600082815260046020819052604091829020810154915163da72081760e01b81526104a39260ff169101611ed8565b60008281526005602052604081206001015490036114cb576040516317c12a4960e31b815260040160405180910390fd5b6000828152600460208181526040808420909201805460ff19166001908117909155825160608101845284815280830185815242828601818152898852600690955294909520905181559351848201559051600290930192909255905483917fdcad9437198a33de136a2cf6a229ed07367ec6f99a6958d0aa2ee9ea08353f399161155591611e4a565b60405190815260200160405180910390a25050565b60008181526003602052604090205461010090046001600160a01b031633146115a65760405163fa642e6360e01b815260040160405180910390fd5b600081815260036020526040808220805460ff191660011790555182917fb62855a8e0d386952ecee37e0aa2de7c75b0de504a3a04b8345c22f0bbd31b1591a250565b6008546040805160a081018252600080825233602080840191825283850189815260608501899052608085018890528684526003909152939091208251815492516001600160a81b0319909316901515610100600160a81b031916176101006001600160a01b0390931692909202919091178155915190919060018201906116719082611d75565b50606082015160028201906116869082611d75565b506080820151600382019061169b9082611d75565b505060405133915082907ffcd335a152e711f7e0e74487e27043f438dc7e73d600889758eb946a0192c3e090600090a3600880549060006116db83611ebf565b91905055509392505050565b600081815260046020526040812060030154900361171857604051635d70603360e01b815260040160405180910390fd5b50565b60008060008061172b8686611778565b92509250925061173b82826117c5565b50909150505b92915050565b60008181526006602052604081206002015490036117185760405163126ea8e960e31b815260040160405180910390fd5b600080600083516041036117b25760208401516040850151606086015160001a6117a488828585611882565b9550955095505050506117be565b50508151600091506002905b9250925092565b60008260038111156117d9576117d961196a565b036117e2575050565b60018260038111156117f6576117f661196a565b036118145760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156118285761182861196a565b036118495760405163fce698f760e01b8152600481018290526024016104a3565b600382600381111561185d5761185d61196a565b0361187e576040516335e2f38360e21b8152600481018290526024016104a3565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156118bd5750600091506003905082611947565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611911573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661193d57506000925060019150829050611947565b9250600091508190505b9450945094915050565b60006020828403121561196357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6005811061199e57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b03868116825285166020820152604081018490526060810183905260a081016119d56080830184611980565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a0657600080fd5b81356020830160008067ffffffffffffffff841115611a2757611a276119df565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff82111715611a5657611a566119df565b604052838152905080828401871015611a6e57600080fd5b838360208301376000602085830101528094505050505092915050565b60008060408385031215611a9e57600080fd5b82359150602083013567ffffffffffffffff811115611abc57600080fd5b611ac8858286016119f5565b9150509250929050565b600080600080600060a08688031215611aea57600080fd5b8535945060208601356001600160a01b0381168114611b0857600080fd5b93506040860135925060608601359150608086013567ffffffffffffffff811115611b3257600080fd5b611b3e888289016119f5565b9150509295509295909350565b60008060408385031215611b5e57600080fd5b50508035926020909101359150565b6000815180845260005b81811015611b9357602081850181015186830182015201611b77565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000611bc66040830185611b6d565b90508260208301529392505050565b600080600060608486031215611bea57600080fd5b505081359360208301359350604090920135919050565b85151581526001600160a01b038516602082015260a060408201819052600090611c2d90830186611b6d565b8281036060840152611c3f8186611b6d565b90508281036080840152611c538185611b6d565b98975050505050505050565b600080600060608486031215611c7457600080fd5b833567ffffffffffffffff811115611c8b57600080fd5b611c97868287016119f5565b935050602084013567ffffffffffffffff811115611cb457600080fd5b611cc0868287016119f5565b925050604084013567ffffffffffffffff811115611cdd57600080fd5b611ce9868287016119f5565b9150509250925092565b600181811c90821680611d0757607f821691505b60208210810361105657634e487b7160e01b600052602260045260246000fd5b601f821115610c4e57806000526020600020601f840160051c81016020851015611d4e5750805b601f840160051c820191505b81811015611d6e5760008155600101611d5a565b5050505050565b815167ffffffffffffffff811115611d8f57611d8f6119df565b611da381611d9d8454611cf3565b84611d27565b6020601f821160018114611dd75760008315611dbf5750848201515b600019600385901b1c1916600184901b178455611d6e565b600084815260208120601f198516915b82811015611e075787850151825560209485019460019092019101611de7565b5084821015611e255786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082018082111561174157611741611e34565b808202811582820484141761174157611741611e34565b600082611e9157634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561174157611741611e34565b634e487b7160e01b600052603260045260246000fd5b600060018201611ed157611ed1611e34565b5060010190565b60208101611741828461198056fe13e7ed68a0fe9e4bcafdde5f49381514a9ee7e34ff7d926eadab64c1e0e77f16a2646970667358221220a13610c2278f229e1cf91f1e3fefcd3015c6f817cc9fb642a6568562cc04563764736f6c634300081b0033\",\"sourceMap\":\"128:13589:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:43;;;;;;;;;;-1:-1:-1;1279:43:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;447:25:21;;;503:2;488:18;;481:34;;;;531:18;;;524:34;435:2;420:18;1279:43:19;;;;;;;;1190:41;;;;;;;;;;-1:-1:-1;1190:41:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1190:41:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6306:658::-;;;;;;;;;;-1:-1:-1;6306:658:19;;;;;:::i;:::-;;:::i;:::-;;207:37;;;;;;;;;;;;;;;;;;;3117:25:21;;;3105:2;3090:18;207:37:19;2971:177:21;9035:4680:19;;;;;;;;;;-1:-1:-1;9035:4680:19;;;;;:::i;:::-;;:::i;5266:1034::-;;;;;;:::i;:::-;;:::i;5011:249::-;;;;;;;;;;-1:-1:-1;5011:249:19;;;;;:::i;:::-;;:::i;1328:62::-;;;;;;;;;;-1:-1:-1;1328:62:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:14:21;;5197:22;5179:41;;5167:2;5152:18;1328:62:19;5039:187:21;1396:28:19;;;;;;;;;;;;;;;;1238:35;;;;;;;;;;-1:-1:-1;1238:35:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;338:23::-;;;;;;;;;;-1:-1:-1;338:23:19;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;6096:32:21;;;6078:51;;6066:2;6051:18;338:23:19;5932:203:21;8460:569:19;;;;;;;;;;-1:-1:-1;8460:569:19;;;;;:::i;:::-;;:::i;7588:866::-;;;;;;;;;;-1:-1:-1;7588:866:19;;;;;:::i;:::-;;:::i;1141:43::-;;;;;;;;;;-1:-1:-1;1141:43:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;6970:587::-;;;;;;;;;;-1:-1:-1;6970:587:19;;;;;:::i;:::-;;:::i;250:50::-;;;;;;;;;;;;;;;;4759:246;;;;;;;;;;-1:-1:-1;4759:246:19;;;;;:::i;:::-;;:::i;4213:540::-;;;;;;;;;;-1:-1:-1;4213:540:19;;;;;:::i;:::-;;:::i;6306:658::-;6384:8;3770:23;3784:8;3770:13;:23::i;:::-;3821:17;;;;:7;:17;;;;;:24;;;-1:-1:-1;;;;;3821:24:19;3807:10;:38;3803:90;;3868:14;;-1:-1:-1;;;3868:14:19;;;;;;;;;;;3803:90;6435:1:::1;6408:14:::0;;;:4:::1;:14;::::0;;;;:24:::1;;::::0;:28;6404:111:::1;;6479:14;::::0;;;:4:::1;:14;::::0;;;;;;:24:::1;;::::0;6459:45;;-1:-1:-1;;;6459:45:19;;::::1;::::0;::::1;3117:25:21::0;;;;3090:18;;6459:45:19::1;;;;;;;;6404:111;6529:17;::::0;;;:7:::1;:17;::::0;;;;:26:::1;;::::0;6558:15:::1;-1:-1:-1::0;6525:131:19::1;;;6618:17;::::0;;;:7:::1;:17;::::0;;;;;;;;:26:::1;;::::0;6596:49;;-1:-1:-1;;;6596:49:19;;::::1;::::0;6618:26;6596:49:::1;3117:25:21::0;;;3105:2;3090:18;;2971:177;6525:131:19::1;6676:5;6670:19;6693:1;6670:24:::0;6666:73:::1;;6717:11;;-1:-1:-1::0;;;6717:11:19::1;;;;;;;;;;;6666:73;6766:80;::::0;;;;::::1;::::0;;;;;6820:15:::1;6766:80;::::0;;::::1;::::0;;;;-1:-1:-1;6749:14:19;;;:4:::1;:14:::0;;;;;;;:97;;:14;;:97:::1;::::0;:14;:97:::1;:::i;:::-;-1:-1:-1::0;6749:97:19::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;6884:17:::1;::::0;;;:7:::1;:17:::0;;;;;;:23;6946:10;;6909::::1;::::0;-1:-1:-1;;;;;6884:23:19::1;::::0;6892:8;;6861:96:::1;::::0;6921:5;;6928:28:::1;::::0;:15:::1;:28;:::i;:::-;6861:96;;;;;;;:::i;:::-;;;;;;;;6306:658:::0;;;:::o;9035:4680::-;9123:8;3385:23;3399:8;3385:13;:23::i;:::-;9647:25:::1;9675:17:::0;;;:7:::1;:17;::::0;;;;;;;:24;;::::1;::::0;;9726;::::1;::::0;9776:23;;9826:24:::1;::::0;;::::1;::::0;9675::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;9726:24:19;;::::1;::::0;9776:23;;::::1;::::0;9826:24;9865:12:::1;:38;;;;;;;;:::i;:::-;::::0;9861:100:::1;;9926:24;;-1:-1:-1::0;;;9926:24:19::1;;;;;;;;;;;9861:100;9991:27;9975:12;:43;;;;;;;;:::i;:::-;::::0;9971:343:::1;;10034:19;10101:3;10075:23;10089:8;10075:13;:23::i;:::-;10066:32;::::0;:6;:32:::1;:::i;:::-;:38;;;;:::i;:::-;10056:49;::::0;:6;:49:::1;:::i;:::-;10119:17;::::0;;;10146:22:::1;10119:17;::::0;;;;;;;:24;::::1;:49:::0;;-1:-1:-1;;10119:49:19::1;::::0;;::::1;::::0;;;10182:37;10034:71;;-1:-1:-1;;;;;;10182:24:19;::::1;::::0;:37:::1;::::0;::::1;;::::0;10034:71;;10182:37;;10119:17;10182:37;10034:71;10182:24;:37;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;10263:6;-1:-1:-1::0;;;;;10238:45:19::1;10253:8;-1:-1:-1::0;;;;;;;;;;;10271:11:19::1;10238:45;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;10238:45:19::1;;;;;;;;10297:7;;;;;9035:4680:::0;;;:::o;9971:343::-:1;10344:28;10328:12;:44;;;;;;;;:::i;:::-;::::0;10324:328:::1;;10388:18;10444:3;10418:23;10432:8;10418:13;:23::i;:::-;10409:32;::::0;:6;:32:::1;:::i;:::-;:38;;;;:::i;:::-;10461:17;::::0;;;10488:22:::1;10461:17;::::0;;;;;;;:24;::::1;:49:::0;;-1:-1:-1;;10461:49:19::1;::::0;;::::1;::::0;;;10524:35;10388:59;;-1:-1:-1;;;;;;10524:23:19;::::1;::::0;:35:::1;::::0;::::1;;::::0;10388:59;;10524:35;;10461:17;10524:35;10388:59;10524:23;:35;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;10603:5;-1:-1:-1::0;;;;;10578:43:19::1;10593:8;-1:-1:-1::0;;;;;;;;;;;10610:10:19::1;10578:43;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;10324:328:19::1;10726:17:::0;;:21;10722:214:::1;;10900:25;::::0;-1:-1:-1;;;10900:25:19;;11603:2:21;10900:25:19::1;::::0;::::1;11585:21:21::0;11642:2;11622:18;;;11615:30;-1:-1:-1;;;11661:18:21;;;11654:45;11716:18;;10900:25:19::1;11401:339:21::0;10722:214:19::1;11038:21;11022:12;:37;;;;;;;;:::i;:::-;::::0;11018:1714:::1;;11075:18;11096:23;11110:8;11096:13;:23::i;:::-;11075:44;;11238:10;11252:1;11238:15:::0;11234:569:::1;;11315:17;::::0;;;11342:22:::1;11315:17;::::0;;;;;;;:24;::::1;:49:::0;;-1:-1:-1;;11315:49:19::1;::::0;;::::1;::::0;;;11382:32;-1:-1:-1;;;;;11382:24:19;::::1;::::0;:32:::1;::::0;::::1;;::::0;;;;11315:17;11382:32;;:24;:32;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;11462:6;-1:-1:-1::0;;;;;11437:40:19::1;11452:8;-1:-1:-1::0;;;;;;;;;;;11470:6:19::1;11437:40;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;11234:569:19::1;11526:10;11540:3;11526:17:::0;11522:281:::1;;11604:17;::::0;;;11631:22:::1;11604:17;::::0;;;;;;;:24;::::1;:49:::0;;-1:-1:-1;;11604:49:19::1;::::0;;::::1;::::0;;;11671:31;-1:-1:-1;;;;;11671:23:19;::::1;::::0;:31:::1;::::0;::::1;;::::0;;;;11604:17;11671:31;;:23;:31;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;11750:5;-1:-1:-1::0;;;;;11725:39:19::1;11740:8;-1:-1:-1::0;;;;;;;;;;;11757:6:19::1;11725:39;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;11522:281:19::1;11903:3;11881:19;11890:10:::0;11881:6;:19:::1;:::i;:::-;:25;;;;:::i;:::-;11868:38:::0;-1:-1:-1;11920:19:19::1;11942;11868:38:::0;11942:6;:19:::1;:::i;:::-;11920:41:::0;-1:-1:-1;;;;;;12204:19:19;::::1;:10;:19:::0;12200:522:::1;;12243:17;::::0;;;:7:::1;:17;::::0;;;;;;;:24;;::::1;:54:::0;;-1:-1:-1;;12243:54:19::1;12270:27;12243:54;::::0;;12315:35;-1:-1:-1;;;;;12315:23:19;::::1;::::0;:35:::1;::::0;::::1;;::::0;;;;12243:17;12315:35;;:23;:35;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;12398:5;-1:-1:-1::0;;;;;12373:43:19::1;12388:8;-1:-1:-1::0;;;;;;;;;;;12405:10:19::1;12373:43;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;12373:43:19::1;;;;;;;;12434:7;;;;;;9035:4680:::0;;;:::o;12200:522::-:1;-1:-1:-1::0;;;;;12465:20:19;::::1;:10;:20:::0;12461:261:::1;;12505:17;::::0;;;:7:::1;:17;::::0;;;;;;;:24;;::::1;:55:::0;;-1:-1:-1;;12505:55:19::1;12532:28;12505:55;::::0;;12578:37;-1:-1:-1;;;;;12578:24:19;::::1;::::0;:37:::1;::::0;::::1;;::::0;;;;12505:17;12578:37;;:24;:37;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;12663:6;-1:-1:-1::0;;;;;12638:45:19::1;12653:8;-1:-1:-1::0;;;;;;;;;;;12671:11:19::1;12638:45;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;12461:261:19::1;11061:1671;;11018:1714;12853:1;12826:14:::0;;;:4:::1;:14;::::0;;;;:24:::1;;::::0;:28;12822:887:::1;;12984:10;::::0;;12957:14;;;:4:::1;:14;::::0;;;;;:24:::1;;::::0;:37:::1;::::0;12984:10;12957:37:::1;:::i;:::-;12938:15;:56;12934:160;;13068:10;::::0;;13041:14;;;:4:::1;:14;::::0;;;;;:24:::1;;::::0;:37:::1;::::0;13068:10;13041:37:::1;:::i;:::-;13021:58;;-1:-1:-1::0;;;13021:58:19::1;;;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;12934:160:19::1;13108:17;::::0;;;13135:22:::1;13108:17;::::0;;;;;;;:24;::::1;:49:::0;;-1:-1:-1;;13108:49:19::1;::::0;;::::1;::::0;;;13171:32;-1:-1:-1;;;;;13171:24:19;::::1;::::0;:32:::1;::::0;::::1;;::::0;;;;13108:17;13171:32;;:24;:32;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;13247:6;-1:-1:-1::0;;;;;13222:40:19::1;13237:8;-1:-1:-1::0;;;;;;;;;;;13255:6:19::1;13222:40;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;13222:40:19::1;;;;;;;;13276:7;;;;9035:4680:::0;;;:::o;12822:887::-:1;13399:17;::::0;;;:7:::1;:17;::::0;;;;:26:::1;;::::0;13380:15:::1;:45;13376:136;;13470:17;::::0;;;:7:::1;:17;::::0;;;;;;;;:26:::1;;::::0;13452:45;;-1:-1:-1;;;13452:45:19;;::::1;::::0;13470:26;13452:45:::1;3117:25:21::0;;;3105:2;3090:18;;2971:177;13376:136:19::1;13526:17;::::0;;;13553:22:::1;13526:17;::::0;;;;;;;:24;::::1;:49:::0;;-1:-1:-1;;13526:49:19::1;::::0;;::::1;::::0;;;13589:31;-1:-1:-1;;;;;13589:23:19;::::1;::::0;:31:::1;::::0;::::1;;::::0;;;;13526:17;13589:31;;:23;:31;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;13664:5;-1:-1:-1::0;;;;;13639:39:19::1;13654:8;-1:-1:-1::0;;;;;;;;;;;13671:6:19::1;13639:39;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;3418:1:19::1;9035:4680:::0;;;:::o;5266:1034::-;5488:1;5459:17;;;:7;:17;;;;;:26;;;:30;5455:89;;5512:21;;-1:-1:-1;;;5512:21:19;;;;;;;;;;;5455:89;5576:15;5558;:33;5554:88;;;5614:17;;-1:-1:-1;;;5614:17:19;;;;;;;;;;;5554:88;5684:97;;;-1:-1:-1;;;5684:97:19;;;12004:25:21;12045:18;;;12038:34;;;12088:18;;;12081:34;;;5754:9:19;12131:18:21;;;12124:34;12174:19;;;12167:35;;;5652:19:19;;11976::21;;5684:97:19;;;;;;;;;;;;5674:108;;;;;;5652:130;;5792:14;5809:46;5823:11;5836:18;5809:13;:46::i;:::-;5792:63;;5879:7;-1:-1:-1;;;;;5869:17:19;:6;-1:-1:-1;;;;;5869:17:19;;5865:73;;5909:18;;-1:-1:-1;;;5909:18:19;;;;;;;;;;;5865:73;5948:16;5967:33;5985:15;5967;:33;:::i;:::-;5948:52;;6030:183;;;;;;;;6058:10;-1:-1:-1;;;;;6030:183:19;;;;;6090:7;-1:-1:-1;;;;;6030:183:19;;;;;6119:9;6030:183;;;;6152:8;6030:183;;;;6182:20;6030:183;;;;;;;;:::i;:::-;;;6010:17;;;;:7;:17;;;;;;;;;:203;;;;-1:-1:-1;;;;;6010:203:19;;;-1:-1:-1;;;;;;6010:203:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6010:203:19;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;6228:65:19;;;6273:9;12387:25:21;;12443:2;12428:18;;12421:34;;;-1:-1:-1;;;;;6228:65:19;;;-1:-1:-1;6252:10:19;;6242:8;;6228:65;;12360:18:21;6228:65:19;;;;;;;5445:855;;;5266:1034;;;;;:::o;5011:249::-;5077:20;;;;:8;:20;;;;;:29;;;;-1:-1:-1;;;;;5077:29:19;5110:10;5077:43;5073:95;;5143:14;;-1:-1:-1;;;5143:14:19;;;;;;;;;;;5073:95;5207:5;5177:20;;;:8;:20;;;;;;:35;;-1:-1:-1;;5177:35:19;;;5227:26;5186:10;;5227:26;;;5011:249;:::o;1238:35::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;338:23::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;338:23:19;;-1:-1:-1;338:23:19;:::o;8460:569::-;8546:18;8522:8;3483:24;3498:8;3483:14;:24::i;:::-;8630:23:::1;::::0;8599:18:::1;::::0;;;:8:::1;:18;::::0;;;;:28:::1;;::::0;:54:::1;::::0;8630:23;8599:54:::1;:::i;:::-;8580:15;:73;8576:199;;8740:23;::::0;8709:18:::1;::::0;;;:8:::1;:18;::::0;;;;:28:::1;;::::0;:54:::1;::::0;8740:23;8709:54:::1;:::i;:::-;8676:88;;-1:-1:-1::0;;;8676:88:19::1;;;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;8576:199:19::1;8836:18;::::0;;;:8:::1;:18;::::0;;;;:24:::1;;::::0;:29;;8832:68:::1;;8888:1;8881:8;;;;8832:68;8993:18;::::0;;;:8:::1;:18;::::0;;;;:29;;-1:-1:-1;3517:1:19::1;8460:569:::0;;;;:::o;7588:866::-;7687:8;7697;3981:24;3996:8;3981:14;:24::i;:::-;4033:6;4040:8;4033:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4033:16:19;4019:10;:30;4015:81;;4072:13;;-1:-1:-1;;;4072:13:19;;;;;;;;;;;4015:81;7721:20:::1;::::0;;;:10:::1;:20;::::0;;;;;;;:30;;;;;;;;;::::1;;7717:82;;;7774:14;;-1:-1:-1::0;;;7774:14:19::1;;;;;;;;;;;7717:82;7844:23;::::0;7813:18:::1;::::0;;;:8:::1;:18;::::0;;;;:28:::1;;::::0;7870:15:::1;::::0;7813:54:::1;::::0;::::1;:::i;:::-;:72;7809:195;;;7969:23;::::0;7938:18:::1;::::0;;;:8:::1;:18;::::0;;;;:28:::1;;::::0;:54:::1;::::0;7969:23;7938:54:::1;:::i;:::-;7908:85;;-1:-1:-1::0;;;7908:85:19::1;;;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;7809:195:19::1;8032:3;8018:11;:17;8014:74;;;8058:19;;-1:-1:-1::0;;;8058:19:19::1;;;;;;;;;;;8014:74;8098:20;::::0;;;:10:::1;:20;::::0;;;;;;;:30;;;;;;;;:37;;-1:-1:-1;;8098:37:19::1;8131:4;8098:37:::0;;::::1;::::0;;;8165:18;;;:8:::1;:18:::0;;;;;;:24;;::::1;::::0;8223:29;;8165:24;;8339:12:::1;::::0;8165:24;;8339:12:::1;:::i;:::-;8323:11:::0;8296:24:::1;8312:8:::0;8296:13;:24:::1;:::i;:::-;:38;;;;:::i;:::-;8295:57;;;;:::i;:::-;8263:18;::::0;;;:8:::1;:18;::::0;;;;:89;;;8362:24:::1;::::0;;::::1;:26:::0;;;::::1;::::0;::::1;:::i;:::-;;;;;;8425:8;8415;8403:44;8435:11;8403:44;;;;3117:25:21::0;;3105:2;3090:18;;2971:177;1141:43:19;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1141:43:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6970:587::-;7030:8;3578:23;3592:8;3578:13;:23::i;:::-;3629:17;;;;:7;:17;;;;;:23;-1:-1:-1;;;;;3629:23:19;3615:10;:37;3611:88;;3675:13;;-1:-1:-1;;;3675:13:19;;;;;;;;;;;3611:88;7082:20:::1;7054:17:::0;;;:7:::1;:17;::::0;;;;;;:24;::::1;::::0;::::1;;::::0;:48;::::1;;;;;;:::i;:::-;;7050:128;;7142:17;::::0;;;:7:::1;:17;::::0;;;;;;;;:24;::::1;::::0;7125:42;;-1:-1:-1;;;7125:42:19;;::::1;::::0;7142:24:::1;;::::0;7125:42:::1;;:::i;7050:128::-;7191:14;::::0;;;:4:::1;:14;::::0;;;;:24:::1;;::::0;:29;;7187:84:::1;;7243:17;;-1:-1:-1::0;;;7243:17:19::1;;;;;;;;;;;7187:84;7281:17;::::0;;;:7:::1;:17;::::0;;;;;;;:24;;::::1;:48:::0;;-1:-1:-1;;7281:48:19::1;7308:21;7281:48:::0;;::::1;::::0;;;7360:108;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;7442:15:::1;7360:108:::0;;;;;;7339:18;;;:8:::1;:18:::0;;;;;;;:129;;;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;7526:23;;7281:17;;7483:67:::1;::::0;7508:41:::1;::::0;::::1;:::i;:::-;7483:67;::::0;3117:25:21;;;3105:2;3090:18;7483:67:19::1;;;;;;;6970:587:::0;;:::o;4759:246::-;4824:20;;;;:8;:20;;;;;:29;;;;-1:-1:-1;;;;;4824:29:19;4857:10;4824:43;4820:95;;4890:14;;-1:-1:-1;;;4890:14:19;;;;;;;;;;;4820:95;4924:20;;;;:8;:20;;;;;;:34;;-1:-1:-1;;4924:34:19;4954:4;4924:34;;;4973:25;4933:10;;4973:25;;;4759:246;:::o;4213:540::-;4416:13;;4462:203;;;;;;;;-1:-1:-1;4462:203:19;;;4521:10;4462:203;;;;;;;;;;;;;;;;;;;;;;;;;4439:20;;;:8;:20;;;;;;;:226;;;;;;-1:-1:-1;;;;;;4439:226:19;;;;;;-1:-1:-1;;;;;;4439:226:19;;;-1:-1:-1;;;;;4439:226:19;;;;;;;;;;;;;;;4462:203;;4439:20;-1:-1:-1;4439:226:19;;;;;;;:::i;:::-;-1:-1:-1;4439:226:19;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4439:226:19;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;4680:41:19;;4710:10;;-1:-1:-1;4698:10:19;;4680:41;;;;;4731:13;:15;;;:13;:15;;;:::i;:::-;;;;;;4213:540;;;;;:::o;3013:156::-;3082:17;;;;:7;:17;;;;;:26;;;:31;;3078:85;;3136:16;;-1:-1:-1;;;3136:16:19;;;;;;;;;;;3078:85;3013:156;:::o;3714:255:18:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:18;;-1:-1:-1;;3714:255:18;;;;;:::o;3175:154:19:-;3245:18;;;;:8;:18;;;;;:28;;;:33;;3241:82;;3301:11;;-1:-1:-1;;;3301:11:19;;;;;;;;;;;2129:778:18;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:18;;2823:1;;-1:-1:-1;2827:35:18;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:18;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:18;;;;;3117:25:21;;;3090:18;;7634:46:18;2971:177:21;7563:243:18;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:18;;;;;3117:25:21;;;3090:18;;7763:32:18;2971:177:21;7697:109:18;7280:532;;:::o;5203:1551::-;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:18;;-1:-1:-1;6385:30:18;;-1:-1:-1;6417:1:18;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;13367:25:21;;;13440:4;13428:17;;13408:18;;;13401:45;;;;13462:18;;;13455:34;;;13505:18;;;13498:34;;;6541:24:18;;13339:19:21;;6541:24:18;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:18;;-1:-1:-1;;6541:24:18;;;-1:-1:-1;;;;;;;6579:20:18;;6575:113;;-1:-1:-1;6631:1:18;;-1:-1:-1;6635:29:18;;-1:-1:-1;6631:1:18;;-1:-1:-1;6615:62:18;;6575:113;6706:6;-1:-1:-1;6714:20:18;;-1:-1:-1;6714:20:18;;-1:-1:-1;5203:1551:18;;;;;;;;;:::o;14:226:21:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:21;;14:226;-1:-1:-1;14:226:21:o;569:127::-;630:10;625:3;621:20;618:1;611:31;661:4;658:1;651:15;685:4;682:1;675:15;701:240;785:1;778:5;775:12;765:143;;830:10;825:3;821:20;818:1;811:31;865:4;862:1;855:15;893:4;890:1;883:15;765:143;917:18;;701:240::o;946:553::-;-1:-1:-1;;;;;1239:32:21;;;1221:51;;1308:32;;1303:2;1288:18;;1281:60;1372:2;1357:18;;1350:34;;;1415:2;1400:18;;1393:34;;;1208:3;1193:19;;1436:57;1488:3;1473:19;;1465:6;1436:57;:::i;:::-;946:553;;;;;;;;:::o;1504:127::-;1565:10;1560:3;1556:20;1553:1;1546:31;1596:4;1593:1;1586:15;1620:4;1617:1;1610:15;1636:889;1679:5;1732:3;1725:4;1717:6;1713:17;1709:27;1699:55;;1750:1;1747;1740:12;1699:55;1790:6;1777:20;1829:4;1821:6;1817:17;1858:1;1880;1904:18;1896:6;1893:30;1890:56;;;1926:18;;:::i;:::-;-1:-1:-1;2081:2:21;2075:9;-1:-1:-1;;1994:2:21;1973:15;;1969:29;;2139:2;2127:15;2123:29;2111:42;;2204:22;;;2183:18;2168:34;;2165:62;2162:88;;;2230:18;;:::i;:::-;2266:2;2259:22;2316;;;2301:6;-1:-1:-1;2301:6:21;2353:16;;;2350:25;-1:-1:-1;2347:45:21;;;2388:1;2385;2378:12;2347:45;2438:6;2433:3;2426:4;2418:6;2414:17;2401:44;2493:1;2486:4;2477:6;2469;2465:19;2461:30;2454:41;2513:6;2504:15;;;;;;1636:889;;;;:::o;2530:436::-;2608:6;2616;2669:2;2657:9;2648:7;2644:23;2640:32;2637:52;;;2685:1;2682;2675:12;2637:52;2730:23;;;-1:-1:-1;2828:2:21;2813:18;;2800:32;2855:18;2844:30;;2841:50;;;2887:1;2884;2877:12;2841:50;2910;2952:7;2943:6;2932:9;2928:22;2910:50;:::i;:::-;2900:60;;;2530:436;;;;;:::o;3593:859::-;3697:6;3705;3713;3721;3729;3782:3;3770:9;3761:7;3757:23;3753:33;3750:53;;;3799:1;3796;3789:12;3750:53;3844:23;;;-1:-1:-1;3943:2:21;3928:18;;3915:32;-1:-1:-1;;;;;3978:33:21;;3966:46;;3956:74;;4026:1;4023;4016:12;3956:74;4049:7;-1:-1:-1;4129:2:21;4114:18;;4101:32;;-1:-1:-1;4232:2:21;4217:18;;4204:32;;-1:-1:-1;4313:3:21;4298:19;;4285:33;4341:18;4330:30;;4327:50;;;4373:1;4370;4363:12;4327:50;4396;4438:7;4429:6;4418:9;4414:22;4396:50;:::i;:::-;4386:60;;;3593:859;;;;;;;;:::o;4688:346::-;4756:6;4764;4817:2;4805:9;4796:7;4792:23;4788:32;4785:52;;;4833:1;4830;4823:12;4785:52;-1:-1:-1;;4878:23:21;;;4998:2;4983:18;;;4970:32;;-1:-1:-1;4688:346:21:o;5231:400::-;5273:3;5311:5;5305:12;5338:6;5333:3;5326:19;5363:1;5373:139;5387:6;5384:1;5381:13;5373:139;;;5495:4;5480:13;;;5476:24;;5470:31;5450:11;;;5446:22;;5439:63;5402:12;5373:139;;;5377:3;5557:1;5550:4;5541:6;5536:3;5532:16;5528:27;5521:38;5620:4;5613:2;5609:7;5604:2;5596:6;5592:15;5588:29;5583:3;5579:39;5575:50;5568:57;;;5231:400;;;;:::o;5636:291::-;5813:2;5802:9;5795:21;5776:4;5833:45;5874:2;5863:9;5859:18;5851:6;5833:45;:::i;:::-;5825:53;;5914:6;5909:2;5898:9;5894:18;5887:34;5636:291;;;;;:::o;6140:466::-;6217:6;6225;6233;6286:2;6274:9;6265:7;6261:23;6257:32;6254:52;;;6302:1;6299;6292:12;6254:52;-1:-1:-1;;6347:23:21;;;6467:2;6452:18;;6439:32;;-1:-1:-1;6570:2:21;6555:18;;;6542:32;;6140:466;-1:-1:-1;6140:466:21:o;6611:727::-;6913:14;;6906:22;6888:41;;-1:-1:-1;;;;;6965:32:21;;6960:2;6945:18;;6938:60;6985:3;7029:2;7014:18;;7007:31;;;-1:-1:-1;;7061:46:21;;7087:19;;7079:6;7061:46;:::i;:::-;7155:9;7147:6;7143:22;7138:2;7127:9;7123:18;7116:50;7189:33;7215:6;7207;7189:33;:::i;:::-;7175:47;;7271:9;7263:6;7259:22;7253:3;7242:9;7238:19;7231:51;7299:33;7325:6;7317;7299:33;:::i;:::-;7291:41;6611:727;-1:-1:-1;;;;;;;;6611:727:21:o;7343:754::-;7450:6;7458;7466;7519:2;7507:9;7498:7;7494:23;7490:32;7487:52;;;7535:1;7532;7525:12;7487:52;7575:9;7562:23;7608:18;7600:6;7597:30;7594:50;;;7640:1;7637;7630:12;7594:50;7663;7705:7;7696:6;7685:9;7681:22;7663:50;:::i;:::-;7653:60;;;7766:2;7755:9;7751:18;7738:32;7795:18;7785:8;7782:32;7779:52;;;7827:1;7824;7817:12;7779:52;7850;7894:7;7883:8;7872:9;7868:24;7850:52;:::i;:::-;7840:62;;;7955:2;7944:9;7940:18;7927:32;7984:18;7974:8;7971:32;7968:52;;;8016:1;8013;8006:12;7968:52;8039;8083:7;8072:8;8061:9;8057:24;8039:52;:::i;:::-;8029:62;;;7343:754;;;;;:::o;8102:380::-;8181:1;8177:12;;;;8224;;;8245:61;;8299:4;8291:6;8287:17;8277:27;;8245:61;8352:2;8344:6;8341:14;8321:18;8318:38;8315:161;;8398:10;8393:3;8389:20;8386:1;8379:31;8433:4;8430:1;8423:15;8461:4;8458:1;8451:15;8613:518;8715:2;8710:3;8707:11;8704:421;;;8751:5;8748:1;8741:16;8795:4;8792:1;8782:18;8865:2;8853:10;8849:19;8846:1;8842:27;8836:4;8832:38;8901:4;8889:10;8886:20;8883:47;;;-1:-1:-1;8924:4:21;8883:47;8979:2;8974:3;8970:12;8967:1;8963:20;8957:4;8953:31;8943:41;;9034:81;9052:2;9045:5;9042:13;9034:81;;;9111:1;9097:16;;9078:1;9067:13;9034:81;;;9038:3;;8613:518;;;:::o;9307:1299::-;9433:3;9427:10;9460:18;9452:6;9449:30;9446:56;;;9482:18;;:::i;:::-;9511:97;9601:6;9561:38;9593:4;9587:11;9561:38;:::i;:::-;9555:4;9511:97;:::i;:::-;9657:4;9688:2;9677:14;;9705:1;9700:649;;;;10393:1;10410:6;10407:89;;;-1:-1:-1;10462:19:21;;;10456:26;10407:89;-1:-1:-1;;9264:1:21;9260:11;;;9256:24;9252:29;9242:40;9288:1;9284:11;;;9239:57;10509:81;;9670:930;;9700:649;8560:1;8553:14;;;8597:4;8584:18;;-1:-1:-1;;9736:20:21;;;9854:222;9868:7;9865:1;9862:14;9854:222;;;9950:19;;;9944:26;9929:42;;10057:4;10042:20;;;;10010:1;9998:14;;;;9884:12;9854:222;;;9858:3;10104:6;10095:7;10092:19;10089:201;;;10165:19;;;10159:26;-1:-1:-1;;10248:1:21;10244:14;;;10260:3;10240:24;10236:37;10232:42;10217:58;10202:74;;10089:201;-1:-1:-1;;;;10336:1:21;10320:14;;;10316:22;10303:36;;-1:-1:-1;9307:1299:21:o;10611:127::-;10672:10;10667:3;10663:20;10660:1;10653:31;10703:4;10700:1;10693:15;10727:4;10724:1;10717:15;10743:125;10808:9;;;10829:10;;;10826:36;;;10842:18;;:::i;10873:168::-;10946:9;;;10977;;10994:15;;;10988:22;;10974:37;10964:71;;11015:18;;:::i;11046:217::-;11086:1;11112;11102:132;;11156:10;11151:3;11147:20;11144:1;11137:31;11191:4;11188:1;11181:15;11219:4;11216:1;11209:15;11102:132;-1:-1:-1;11248:9:21;;11046:217::o;11268:128::-;11335:9;;;11356:11;;;11353:37;;;11370:18;;:::i;12466:127::-;12527:10;12522:3;12518:20;12515:1;12508:31;12558:4;12555:1;12548:15;12582:4;12579:1;12572:15;12598:135;12637:3;12658:17;;;12655:43;;12678:18;;:::i;:::-;-1:-1:-1;12725:1:21;12714:13;;12598:135::o;12738:215::-;12888:2;12873:18;;12900:47;12877:9;12929:6;12900:47;:::i\",\"linkReferences\":{}},\"methodIdentifiers\":{\"createEscrow(bytes32,address,uint256,uint256,bytes)\":\"4911bfe5\",\"disputeResolutionPeriod()\":\"ecb7dbe9\",\"disputeResult(bytes32)\":\"b1f6eb6f\",\"disputes(bytes32)\":\"11be1997\",\"escrows(bytes32)\":\"2d83549c\",\"judgeVotes(bytes32,uint256)\":\"833a1031\",\"judges(uint256)\":\"b06b0368\",\"lastServiceId()\":\"8db9cb87\",\"lockPeriod()\":\"3fd8b02f\",\"pauseService(uint256)\":\"ed422358\",\"pows(bytes32)\":\"9d5783e8\",\"registerService(string,string,string)\":\"ef57d884\",\"resumeService(uint256)\":\"6613ff34\",\"services(uint256)\":\"c22c4f43\",\"submitDispute(bytes32)\":\"df30796e\",\"submitPoW(bytes32,string)\":\"31327ee8\",\"voteOnDispute(bytes32,uint256,uint256)\":\"b24945c2\",\"withdrawFunds(bytes32,bytes)\":\"4758406a\"},\"rawMetadata\":\"{\\\"compiler\\\":{\\\"version\\\":\\\"0.8.27+commit.40a35a09\\\"},\\\"language\\\":\\\"Solidity\\\",\\\"output\\\":{\\\"abi\\\":[{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"_judges\\\",\\\"type\\\":\\\"address[]\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"AlreadyVoted\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"deadline\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"DeadlineAlreadyPassed\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"deadline\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"DeadlineNotPassed\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"deadline\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"DisputeResolutionPeriodNotPassed\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"deadline\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"DisputeResolutionPeriodPassed\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"ECDSAInvalidSignature\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"length\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"ECDSAInvalidSignatureLength\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"s\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"ECDSAInvalidSignatureS\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"EmptyWork\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"EscrowAlreadyExists\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"EscrowAlreadyWithdrawn\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"enum GigaCrew.EscrowStatus\\\",\\\"name\\\":\\\"status\\\",\\\"type\\\":\\\"uint8\\\"}],\\\"name\\\":\\\"EscrowNotPending\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"EscrowWithoutEnoughFunding\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"InvalidBuyerShare\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"InvalidOrderId\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"InvalidServiceId\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"InvalidSignature\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"lockDeadline\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"LockPeriodNotPassed\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"MustBeBuyer\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"MustBeJudge\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"MustBeSeller\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"NoDispute\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"submissionTimestamp\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"PoWAlreadySubmitted\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"PoWNotSubmitted\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"ProposalExpired\\\",\\\"type\\\":\\\"error\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"orderId\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"judgeId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"buyerShare\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"DisputeVote\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"orderId\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"buyer\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"seller\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"deadline\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"EscrowCreated\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"orderId\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"disputeResolutionPeriod\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"EscrowDisputed\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"orderId\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"FundsWithdrawn\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"orderId\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"buyer\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"seller\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"work\\\",\\\"type\\\":\\\"string\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"lockPeriod\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"PoWSubmitted\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"serviceId\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"ServicePaused\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"serviceId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"provider\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"ServiceRegistered\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"serviceId\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"ServiceResumed\\\",\\\"type\\\":\\\"event\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"_orderId\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_seller\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_deadlinePeriod\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_proposalExpiry\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"_proposalSignature\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"createEscrow\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"payable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"disputeResolutionPeriod\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"_orderId\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"disputeResult\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"buyerShare\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"disputes\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"buyerShare\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"votes\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"timestamp\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"escrows\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"buyer\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"seller\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"deadline\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"enum GigaCrew.EscrowStatus\\\",\\\"name\\\":\\\"status\\\",\\\"type\\\":\\\"uint8\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"judgeVotes\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"judges\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"lastServiceId\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"lockPeriod\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_serviceId\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"pauseService\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"pows\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"work\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"timestamp\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_title\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_description\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_communicationChannel\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"registerService\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"service_id\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_serviceId\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"resumeService\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"services\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"paused\\\",\\\"type\\\":\\\"bool\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"provider\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"title\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"description\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"communicationChannel\\\",\\\"type\\\":\\\"string\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"_orderId\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"submitDispute\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"_orderId\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"_work\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"submitPoW\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"_orderId\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_judgeId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_buyerShare\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"voteOnDispute\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"_orderId\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"_signature\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"withdrawFunds\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"}],\\\"devdoc\\\":{\\\"errors\\\":{\\\"ECDSAInvalidSignature()\\\":[{\\\"details\\\":\\\"The signature derives the `address(0)`.\\\"}],\\\"ECDSAInvalidSignatureLength(uint256)\\\":[{\\\"details\\\":\\\"The signature has an invalid length.\\\"}],\\\"ECDSAInvalidSignatureS(bytes32)\\\":[{\\\"details\\\":\\\"The signature has an S value that is in the upper half order.\\\"}]},\\\"kind\\\":\\\"dev\\\",\\\"methods\\\":{},\\\"version\\\":1},\\\"userdoc\\\":{\\\"kind\\\":\\\"user\\\",\\\"methods\\\":{},\\\"version\\\":1}},\\\"settings\\\":{\\\"compilationTarget\\\":{\\\"src/GigaCrew.sol\\\":\\\"GigaCrew\\\"},\\\"evmVersion\\\":\\\"paris\\\",\\\"libraries\\\":{},\\\"metadata\\\":{\\\"bytecodeHash\\\":\\\"ipfs\\\"},\\\"optimizer\\\":{\\\"enabled\\\":true,\\\"runs\\\":200},\\\"remappings\\\":[\\\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\\\",\\\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\\\",\\\":forge-std/=lib/forge-std/src/\\\",\\\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\\\",\\\":openzeppelin-contracts/=lib/openzeppelin-contracts/\\\"]},\\\"sources\\\":{\\\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\\\":{\\\"keccak256\\\":\\\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\\\",\\\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\\\"]},\\\"src/GigaCrew.sol\\\":{\\\"keccak256\\\":\\\"0xa7c95efcf598db532ca892b04ed04674d5fa0933acc51668651f5169a083950f\\\",\\\"license\\\":\\\"UNLICENSED\\\",\\\"urls\\\":[\\\"bzz-raw://0e17a27a51b58f8ca57116514ff535c8efd2f2ebda171c98fbf445fa461e6f4c\\\",\\\"dweb:/ipfs/QmRvbRW6nmCUfwGLZM94arRBDBpennZUoPqmjyJpkwDjF2\\\"]}},\\\"version\\\":1}\",\"metadata\":{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_judges\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"AlreadyVoted\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"type\":\"error\",\"name\":\"DeadlineAlreadyPassed\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"type\":\"error\",\"name\":\"DeadlineNotPassed\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"type\":\"error\",\"name\":\"DisputeResolutionPeriodNotPassed\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"type\":\"error\",\"name\":\"DisputeResolutionPeriodPassed\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"ECDSAInvalidSignature\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"type\":\"error\",\"name\":\"ECDSAInvalidSignatureLength\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"type\":\"error\",\"name\":\"ECDSAInvalidSignatureS\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"EmptyWork\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"EscrowAlreadyExists\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"EscrowAlreadyWithdrawn\"},{\"inputs\":[{\"internalType\":\"enum GigaCrew.EscrowStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"type\":\"error\",\"name\":\"EscrowNotPending\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"EscrowWithoutEnoughFunding\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidBuyerShare\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidOrderId\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidServiceId\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidSignature\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockDeadline\",\"type\":\"uint256\"}],\"type\":\"error\",\"name\":\"LockPeriodNotPassed\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"MustBeBuyer\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"MustBeJudge\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"MustBeSeller\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"NoDispute\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"submissionTimestamp\",\"type\":\"uint256\"}],\"type\":\"error\",\"name\":\"PoWAlreadySubmitted\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"PoWNotSubmitted\"},{\"inputs\":[],\"type\":\"error\",\"name\":\"ProposalExpired\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\",\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"judgeId\",\"type\":\"uint256\",\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"buyerShare\",\"type\":\"uint256\",\"indexed\":false}],\"type\":\"event\",\"name\":\"DisputeVote\",\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\",\"indexed\":true},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\",\"indexed\":true},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\",\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\",\"indexed\":false}],\"type\":\"event\",\"name\":\"EscrowCreated\",\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\",\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"disputeResolutionPeriod\",\"type\":\"uint256\",\"indexed\":false}],\"type\":\"event\",\"name\":\"EscrowDisputed\",\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\",\"indexed\":true},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false}],\"type\":\"event\",\"name\":\"FundsWithdrawn\",\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\",\"indexed\":true},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\",\"indexed\":true},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\",\"indexed\":true},{\"internalType\":\"string\",\"name\":\"work\",\"type\":\"string\",\"indexed\":false},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\",\"indexed\":false}],\"type\":\"event\",\"name\":\"PoWSubmitted\",\"anonymous\":false},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\",\"indexed\":true}],\"type\":\"event\",\"name\":\"ServicePaused\",\"anonymous\":false},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\",\"indexed\":true},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\",\"indexed\":true}],\"type\":\"event\",\"name\":\"ServiceRegistered\",\"anonymous\":false},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceId\",\"type\":\"uint256\",\"indexed\":true}],\"type\":\"event\",\"name\":\"ServiceResumed\",\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deadlinePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_proposalExpiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_proposalSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"createEscrow\"},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"disputeResolutionPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"disputeResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"buyerShare\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"disputes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"buyerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"escrows\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"enum GigaCrew.EscrowStatus\",\"name\":\"status\",\"type\":\"uint8\"}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"judgeVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"judges\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"lastServiceId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"lockPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_serviceId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"pauseService\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"pows\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"work\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_communicationChannel\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"registerService\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"service_id\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_serviceId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"resumeService\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"services\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"communicationChannel\",\"type\":\"string\"}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"submitDispute\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_work\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"submitPoW\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_judgeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buyerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"voteOnDispute\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"withdrawFunds\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"remappings\":[\"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\"erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\"forge-std/=lib/forge-std/src/\",\"halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\"openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"optimizer\":{\"enabled\":true,\"runs\":200},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"compilationTarget\":{\"src/GigaCrew.sol\":\"GigaCrew\"},\"evmVersion\":\"paris\",\"libraries\":{}},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"],\"license\":\"MIT\"},\"src/GigaCrew.sol\":{\"keccak256\":\"0xa7c95efcf598db532ca892b04ed04674d5fa0933acc51668651f5169a083950f\",\"urls\":[\"bzz-raw://0e17a27a51b58f8ca57116514ff535c8efd2f2ebda171c98fbf445fa461e6f4c\",\"dweb:/ipfs/QmRvbRW6nmCUfwGLZM94arRBDBpennZUoPqmjyJpkwDjF2\"],\"license\":\"UNLICENSED\"}},\"version\":1},\"id\":19}","import { composeContext, Content, generateMessageResponse, getEmbeddingZeroVector, IAgentRuntime, Memory, ModelClass, State, stringToUuid, UUID } from \"@elizaos/core\";\nimport { elizaLogger } from \"@elizaos/core\";\nimport { GigaCrewDatabase } from \"./db\";\nimport { ethers, EventLog, Log } from \"ethers\";\nimport { GigaCrewConfig } from \"./environment\";\nimport { WebSocketServer } from \"ws\";\nimport crypto from \"crypto\";\nimport { calcTrail, NegotiationMessage, validateMessage } from \"gigacrew-negotiation\";\nimport { WorkFunction } from \"./client\";\n\nexport class GigaCrewSellerHandler {\n    runtime: IAgentRuntime;\n    contract: ethers.Contract;\n    provider: ethers.Provider;\n    seller: ethers.Wallet;\n    serviceId: string;\n    config: GigaCrewConfig;\n    db: GigaCrewDatabase;\n    totalTime: number;\n    work: WorkFunction;\n    service: any;\n\n    constructor(runtime: IAgentRuntime, seller: ethers.Wallet, contract: ethers.Contract, config: GigaCrewConfig, db: GigaCrewDatabase, work: WorkFunction) {\n        this.runtime = runtime;\n        this.contract = contract.connect(seller) as ethers.Contract;\n        this.seller = seller;\n        this.provider = contract.runner.provider;\n        this.serviceId = config.GIGACREW_SERVICE_ID;\n        this.totalTime = config.GIGACREW_TIME_PER_SERVICE + config.GIGACREW_TIME_BUFFER;\n        this.config = config;\n        this.work = work;\n        this.db = db;\n    }\n\n    async filters() {\n        return [\n            {\n                event: await this.contract.filters.EscrowCreated(null, null, this.seller.address, null, null).getTopicFilter(),\n                handler: this.EscrowCreatedHandler.bind(this)\n            }\n        ];\n    }\n\n    isExpired(deadline: any) {\n        const start = new Date();\n        const end = new Date(parseInt(deadline) * 1000 - this.totalTime * 1000);\n        return start > end;\n    }\n\n    EscrowCreatedHandler(event: EventLog | Log) {\n        const [orderId, buyer, seller, price, deadline] = (event as EventLog).args;\n        this.saveNewOrder(orderId, buyer, seller, price, deadline);\n    }\n\n    saveNewOrder(orderId: string, buyer: string, seller: string, price: string, deadline: string) {\n        if (this.isExpired(deadline)) {\n            elizaLogger.info(\"Can't handle this order! Skipping\", {\n                orderId,\n                buyer,\n                seller,\n                price,\n                deadline\n            });\n            return;\n        }\n        elizaLogger.info(\"Order Received! Saving to DB\", {\n            orderId,\n            buyer,\n            seller,\n            deadline\n        });\n        this.db.insertOrder(orderId.toString(), buyer, seller, \"0\", null, price.toString(), deadline.toString());\n    }\n\n    async start() {\n        const [paused, provider, title, description, communicationChannel] = await this.contract.services(this.serviceId);\n        this.service = {\n            title,\n            description\n        }\n\n        this.handleOrders();    \n        this.handleWithdrawals();\n        this.deleteExpiredProposals();\n\n        this.startNegotiator();\n    }\n\n    async deleteExpiredProposals() {\n        // Run every 5 minutes\n        await this.db.deleteExpiredProposals();\n        setTimeout(() => {\n            this.deleteExpiredProposals();\n        }, 300000);\n    }\n\n    async handleOrders() {\n        const orders = await this.db.getActiveOrdersForSeller(this.seller.address);\n        for (const order of orders) {\n            const { order_id: orderId, service_id: serviceId, buyer_address: buyer, seller_address: seller, context, deadline } = order;\n            const deadlineTimestamp = new Date(deadline + 'Z').getTime() / 1000;\n            if (this.isExpired(deadlineTimestamp)) {\n                elizaLogger.info(\"Order is expired, skipping\", { orderId, serviceId, buyer, seller, context, deadline });\n                continue;\n            }\n\n            let response = (await this.db.getOrder(orderId))?.work;\n            if (!response) {\n                try {\n                    response = await this.work(this.runtime, orderId, buyer, context);\n                    await this.db.setWork(orderId, response);\n                } catch (error) {\n                    await this.db.incrementFailedAttempts(orderId);\n                    elizaLogger.error(\"Error doing work\", {\n                        orderId,\n                        error\n                    });\n                    continue;\n                }\n            }\n            \n            try {\n                const tx = await (await this.contract.submitPoW(orderId, response)).wait();\n\n                elizaLogger.info(\"Work Submitted!\", {\n                    orderId,\n                    response,\n                    tx\n                });\n\n                const lockPeriod = tx.logs[0].args[4].toString();\n                await this.db.setLockPeriod(orderId, lockPeriod);\n            } catch (error) {\n                elizaLogger.error(\"Error submitting work\", {\n                    orderId,\n                    error\n                });\n            }\n        }\n        setTimeout(() => {\n            this.handleOrders();\n        }, 2000);\n    }\n\n    async handleWithdrawals() {\n        const withdrawals = await this.db.getWithdrawableOrdersForSeller(this.seller.address);\n        const cantWithdrawIds = [];\n\n        for (const withdrawal of withdrawals) {\n            const { order_id: orderId } = withdrawal;\n            try {\n                // Make sure seller can withdraw funds by checking for dispute / dispute result\n                try {\n                    const buyerShare = await this.contract.disputeResult(orderId);\n                    if (buyerShare == 100) {\n                        // Fully resolved in favor of buyer\n                        cantWithdrawIds.push(orderId);\n                        continue;\n                    }\n                } catch (error) {\n                    if (error.revert?.name == \"DisputeResolutionPeriodNotPassed\") {\n                        // Dispute resolution period not passed\n                        await this.db.setResolutionPeriod(orderId, error.revert.args[0].toString());\n                        continue;\n                    }\n                    // No dispute found\n                }\n\n                const tx = await (await this.contract.withdrawFunds(orderId, \"0x\")).wait();\n\n                elizaLogger.info(\"Withdrawal successful!\", {\n                    orderId,\n                    tx\n                });\n\n                cantWithdrawIds.push(orderId);\n            } catch (error) {\n                elizaLogger.error(\"Error withdrawing funds\", {\n                    orderId,\n                    error\n                });\n\n                if (error.action == \"estimateGas\" && error.data?.startsWith(\"0x32c6b2c3\")) {\n                    const resolutionPeriod = ethers.toBigInt(\"0x\" + error.data.slice(10)).toString();\n                    await this.db.setResolutionPeriod(orderId, resolutionPeriod);\n                }\n            }\n        }\n\n        await this.db.setCanSellerWithdraw(cantWithdrawIds, false);\n        setTimeout(() => {\n            this.handleWithdrawals();\n        }, 2000);\n    }\n\n    async startNegotiator() {\n        const PROPOSAL_EXPIRY = 5 * 60 * 1000;\n        const server = new WebSocketServer({ port: 8005 });\n\n        server.on('connection', async (socket, req) => {\n            // Any new socket is a new room\n            const roomId = crypto.randomUUID();\n            let buyer: string | undefined;\n            let userId: UUID | undefined;\n            let key: string | undefined;\n            let trail = \"0x0\";\n\n            let state: State | null;\n\n            let processing = false;\n\n            socket.on('message', async (message) => {\n                if (processing) {\n                    elizaLogger.error(\"Already processing a previous message\", { message });\n                    socket.close();\n                    return;\n                }\n                processing = true;\n\n                const validateMessageResult = validateMessage(message.toString(), trail);\n                let data = validateMessageResult.message;\n                trail = validateMessageResult.trail;\n                if (!data) {\n                    elizaLogger.error(\"Invalid message\", { message });\n                    socket.close();\n                    return;\n                } else if (data.type != \"msg\") {\n                    elizaLogger.error(\"Invalid message type\", { data });\n                    socket.close();\n                    return;\n                }\n\n                if (!userId) { // It's the first message\n                    // const extractedUser = ethers.recoverAddress(ethers.getBytes(\"0x\" + trail), data.signature);\n                    // elizaLogger.info(\"Extracted user\", {\n                    //     message: data,\n                    //     extractedUser: extractedUser.toString()\n                    // });\n\n                    buyer = req.socket.remoteAddress.toString();\n                    userId = stringToUuid(buyer);\n                    key = data.key;\n                    await this.runtime.ensureConnection(\n                        userId,\n                        roomId,\n                    );\n\n                    state = await this.runtime.composeState({\n                        userId,\n                        roomId,\n                        agentId: this.runtime.agentId,\n                        content: {\n                            text: \"\",\n                        },\n                    }, {\n                        agentName: this.runtime.character.name,\n                        serviceTitle: this.service.title,\n                        serviceDescription: this.service.description,\n                    });\n                }\n\n                const messageId = stringToUuid(Date.now().toString());\n                const content: Content = {\n                    text: data.content,\n                };\n                const userMessage = {\n                    content,\n                    userId,\n                    roomId,\n                    agentId: this.runtime.agentId,\n                };\n            \n                const memory: Memory = {\n                    id: stringToUuid(messageId + \"-\" + userId),\n                    ...userMessage,\n                    createdAt: Date.now(),\n                };\n\n                await this.runtime.messageManager.addEmbeddingToMemory(memory);\n                await this.runtime.messageManager.createMemory(memory);\n                state = await this.runtime.updateRecentMessageState(state);\n\n                const context = composeContext({\n                    state,\n                    template: negotiationTemplate,\n                });\n\n                const response = await generateMessageResponse({\n                    runtime: this.runtime,\n                    context,\n                    modelClass: ModelClass.MEDIUM,\n                });\n                elizaLogger.info(\"GigaCrew: Generated negotiation response\", {\n                    type: response.type,\n                    response: response,\n                });\n\n                if (response.type == \"ignore\") {\n                    elizaLogger.info(\"Ignoring message\", { response });\n                    socket.close();\n                    return;\n                }\n\n                if (response.type == \"proposal\") {\n                    if (typeof response.deadline === \"string\") {\n                        response.deadline = parseInt(response.deadline);\n                    } else if (typeof response.deadline !== \"number\") {\n                        elizaLogger.error(\"Invalid deadline\", { deadline: response.deadline });\n                        socket.close();\n                        return;\n                    }\n\n                    if (isNaN(response.deadline as number)) {\n                        elizaLogger.error(\"Invalid deadline\", { deadline: response.deadline });\n                        socket.close();\n                        return;\n                    }\n                }\n\n                const responseMessage: NegotiationMessage = {\n                    type: response.type as \"msg\" | \"proposal\",\n                    content: response.content as string,\n                    timestamp: new Date().getTime(),\n                    trail\n                };\n                if (responseMessage.type == \"proposal\") {\n                    responseMessage.price = response.price as string;\n                    responseMessage.deadline = response.deadline as number;\n                    responseMessage.terms = response.terms as string;\n                    responseMessage.proposalExpiry = Math.floor((new Date().getTime() + PROPOSAL_EXPIRY) / 1000);\n                }\n                elizaLogger.info(\"GigaCrew: Converted to negotiation response message\", { responseMessage });\n                trail = calcTrail(responseMessage as NegotiationMessage);\n                elizaLogger.info(\"GigaCrew: Calculated trail\", { trail });\n                const trailBytes = ethers.getBytes(\"0x\" + trail);\n                // responseMessage.signature = await this.seller.signingKey.sign(trailBytes).serialized;\n\n                if (responseMessage.type == \"proposal\") {\n                    const GIGACREW_PROPOSAL_PREFIX = new Uint8Array(32);\n                    GIGACREW_PROPOSAL_PREFIX.set(ethers.toUtf8Bytes(\"GigaCrew Proposal: \"))\n                    const abiCoder = new ethers.AbiCoder();\n                    const proposalBytes = ethers.getBytes(\n                        abiCoder.encode(\n                            [\"bytes32\", \"bytes32\", \"uint256\", \"uint256\", \"uint256\"],\n                            [\n                                ethers.hexlify(GIGACREW_PROPOSAL_PREFIX),\n                                trailBytes,\n                                responseMessage.proposalExpiry,\n                                responseMessage.price,\n                                responseMessage.deadline * 60\n                            ]\n                        )\n                    );\n                    responseMessage.proposalSignature = await this.seller.signingKey.sign(ethers.keccak256(proposalBytes)).serialized;\n                }\n\n                const responseMemory: Memory = {\n                    id: stringToUuid(messageId + \"-\" + this.runtime.agentId),\n                    ...userMessage,\n                    userId: this.runtime.agentId,\n                    content: {\n                        text: response.type == \"proposal\" ? `${response.content}\\nBasically\\nterms: ${response.terms}\\nprice: ${response.price}\\ndeadline: ${response.deadline}minutes\\n` : response.content as string,\n                    },\n                    embedding: getEmbeddingZeroVector(),\n                    createdAt: Date.now(),\n                };\n                await this.runtime.messageManager.createMemory(responseMemory);\n\n                if (responseMessage.type == \"proposal\") {\n                    await this.db.insertProposal(\"0x\" + trail, responseMessage.terms, responseMessage.proposalExpiry.toString());\n                }\n\n                socket.send(JSON.stringify(responseMessage));\n                processing = false;\n            });\n\n            socket.on('error', (error) => {\n                elizaLogger.error(\"Negotiation channel error\", { error });\n            });\n        });\n    }\n}\n\nconst negotiationTemplate = `\n# Task: You are a negotiator who works for {{agentName}} your task is to negotiate with this person you're having a conversation with who would like to buy {{agentName}}'s service (For now all services are one-off i.e. one task that's done and result is given to the buyer).\nKeep your responses short and concise don't repeat yourself too much.\n\nThe Service Being Provided:\nTitle: {{serviceTitle}}\nDescription: {{serviceDescription}}\n\nFor negotiations consider the following:\n- Be reasonable and expect the buyer to also be reasonable.\n- Take into consideration the service's title and description only agree to things the service fully covers DO NOT agree to things that are NOT COVERED by the service just ignore in that case.\n- If it seems things are going nowhere and there's too much useless back and forth then just ignore.\n- If you don't have all the information and data needed for {{ agentName }} to start working and do exactly what the user needs you MUST ask and have the buyer clarify everything surrounding the user's requirements. If the buyer seems unable to provide all the information you need then just \"ignore\" and end the conversation. always CLARIFY and make sure there will be no misunderstandings.\n- If you're asking questions or gathering information then it is NOT a proposal. Proposal is only when you have all the information you need in terms of the full context and requirements for the work to be done by {{ agentName }}.\n\n# Background on {{agentName}}\n## His Knowledge:\n{{knowledge}}\n\n## What he was told when he was created\n{{bio}}\n{{lore}}\n\n{{providers}}\n\n{{recentMessages}}\n\n# Instructions\nYour response must ONLY BE A JSON block and nothing else at all.\nThe json response has the following fields:\n- type: REQUIRED. The type of your message. It can be \"ignore\" to stop, \"msg\" to communicate, \"proposal\" if you're confident you have everything you need and are providing price and deadline along with the terms.\n- content: REQUIRED. The actual text of the message. Be professional and concise.\n- terms: REQUIRED IF PROPOSAL. The terms of the proposal including FULL CONTEXT and INFORMATION about the work to be done. This should be enough data for {{ agentName }} to just read it and do the work.\n- price: REQUIRED IF PROPOSAL. Price for the work. Just number but as string MUST BE A WHOLE NUMBER WITHOUT ANY DECIMALS.\n- deadline: REQUIRED IF PROPOSAL. The deadline for the work to be done once the buyer accepts the proposal. Just a number MUST be in minutes. NEVER BELOW 2 MINUTES.\n\nIf your message type is \"proposal\" then you MUST include the terms, price and deadline.\n`;\n","import { IAgentRuntime } from \"@elizaos/core\";\nimport { elizaLogger } from \"@elizaos/core\";\nimport { GigaCrewDatabase } from \"./db\";\nimport { ethers, EventLog } from \"ethers\";\nimport { GigaCrewConfig } from \"./environment\";\nimport { Log } from \"ethers\";\nimport { ProcessWorkFunction } from \"./client\";\nimport { GigaCrewService, GigaCrewNegotiationResult } from \"./types\";\n\nexport class GigaCrewBuyerHandler {\n    runtime: IAgentRuntime;\n    contract: ethers.Contract;\n    provider: ethers.Provider;\n    buyer: ethers.Wallet;\n    serviceId: string;\n    config: GigaCrewConfig;\n    db: GigaCrewDatabase;\n    orders: any;\n    processWork: ProcessWorkFunction | null;\n\n    constructor(runtime: IAgentRuntime, buyer: ethers.Wallet, contract: ethers.Contract, config: GigaCrewConfig, db: GigaCrewDatabase, processWork?: ProcessWorkFunction) {\n        this.runtime = runtime;\n        this.contract = contract.connect(buyer) as ethers.Contract;\n        this.buyer = buyer;\n        this.provider = contract.runner.provider;\n        this.serviceId = config.GIGACREW_SERVICE_ID;\n        this.config = config;\n        this.db = db;\n        this.orders = {};\n        this.processWork = processWork;\n    }\n\n    async filters() {\n        return [\n            {\n                event: await this.contract.filters.PoWSubmitted(null, this.buyer.address, null, null, null).getTopicFilter(),\n                handler: this.PoWHandler.bind(this)\n            }\n        ];\n    }\n\n    start() {\n        this.handleWithdrawals();\n    }\n\n    async PoWHandler(event: EventLog | Log) {\n        const [orderId, buyer, seller, work, lockPeriod] = (event as EventLog).args;\n        elizaLogger.info(\"Work Received!\", {\n            orderId,\n            work\n        });\n\n        const order = await this.db.setWorkAndReturn(orderId, work, lockPeriod);\n        await this.handleWork(order);\n    }\n\n    async createEscrow(negotiationResult: GigaCrewNegotiationResult, service: GigaCrewService, callbackData?: string) {\n        const tx = await (await this.contract.createEscrow(negotiationResult.orderId, service.provider, negotiationResult.deadline.toString(), negotiationResult.proposalExpiry.toString(), negotiationResult.proposalSignature, { value: negotiationResult.price })).wait();\n        const deadline = tx.logs[0].args[4].toString();\n        await this.db.insertOrder(\n            negotiationResult.orderId,\n            this.buyer.address,\n            service.provider,\n            \"0\",\n            negotiationResult.terms,\n            negotiationResult.price,\n            deadline.toString(),\n            callbackData\n        );\n    }\n\n    async dispute(orderId: string) {\n        try {\n            const tx = await (await this.contract.submitDispute(orderId)).wait();\n            const resolutionPeriod = tx.logs[0].args[1].toString();\n            await this.db.setResolutionPeriod(orderId, resolutionPeriod);\n\n            elizaLogger.info(\"Dispute created!\", {\n                orderId,\n                tx\n            });\n        } catch (error) {\n            elizaLogger.error(\"Error submitting dispute\", {\n                orderId,\n                error\n            });\n        }\n    }\n    \n    async waitForWork(orderId: string, timeout?: number): Promise<string> {\n        // check DB for work first\n        const order = await this.db.getOrder(orderId);\n        if (order && order.work !== null) {\n            return order.work;\n        }\n\n        return new Promise((resolve, reject) => {\n            this.orders[orderId] = resolve;\n            if (timeout) {\n                setTimeout(() => {\n                    delete this.orders[orderId];\n                    reject(new Error(\"Timeout waiting for work\"));\n                }, timeout);\n            }\n        });\n    }\n\n    async handleWork(workRequest: any) {\n        const resolve = this.orders[workRequest?.order_id];\n        if (resolve) {\n            delete this.orders[workRequest.order_id];\n            resolve(workRequest.work);\n        }\n\n        if(this.processWork) {\n            this.processWork(workRequest);\n        }\n    }\n\n    async handleWithdrawals() {\n        const withdrawals = await this.db.getWithdrawableOrdersForBuyer(this.buyer.address);\n        const cantWithdrawIds = [];\n\n        for (const withdrawal of withdrawals) {\n            const { order_id: orderId } = withdrawal;\n            try {\n                // Make sure buyer can withdraw funds by checking for dispute / dispute result\n                try {\n                    const buyerShare = await this.contract.disputeResult(orderId);\n                    if (buyerShare == 0) {\n                        // Fully resolved in favor of seller\n                        cantWithdrawIds.push(orderId);\n                        continue;\n                    }\n                } catch (error) {\n                    if (error.revert?.name == \"DisputeResolutionPeriodNotPassed\") {\n                        // Dispute resolution period not passed\n                        await this.db.setResolutionPeriod(orderId, error.revert.args[0].toString());\n                        continue;\n                    }\n                    // Else = No dispute found\n                }\n\n                const tx = await (await this.contract.withdrawFunds(orderId, \"0x\")).wait();\n\n                elizaLogger.info(\"Withdrawal successful!\", {\n                    orderId,\n                    tx\n                });\n\n                cantWithdrawIds.push(orderId);\n            } catch (error) {\n                elizaLogger.error(\"Error withdrawing funds\", {\n                    orderId,\n                    error\n                });\n\n                if (error.action == \"estimateGas\" && error.data?.startsWith(\"0x32c6b2c3\")) {\n                    const resolutionPeriod = ethers.toBigInt(\"0x\" + error.data.slice(10)).toString();\n                    await this.db.setResolutionPeriod(orderId, resolutionPeriod);\n                }\n            }\n        }\n\n        await this.db.setCanBuyerWithdraw(cantWithdrawIds, false);\n        setTimeout(() => {\n            this.handleWithdrawals();\n        }, 2000);\n    }\n}\n","enum Status {\n    Pending = 0,\n    Disputed = 1,\n    BuyerWithdrawn = 2,\n    SellerWithdrawn = 3,\n    Withdrawn = 4\n}\n\nexport class GigaCrewDatabase {\n    db: any;\n\n    constructor(db: any) {\n        this.db = db;\n        this.db.exec(`\n            CREATE TABLE IF NOT EXISTS gigacrew_orders (\n                order_id TEXT PRIMARY KEY,\n                buyer_address TEXT,\n                seller_address TEXT,\n                status INTEGER,\n                context TEXT,\n                price TEXT,\n                work TEXT,\n                deadline DATETIME,\n                lock_period DATETIME,\n                resolution_period DATETIME,\n                callback_data TEXT,\n                failed_attempts INTEGER DEFAULT 0,\n                can_seller_withdraw BOOL DEFAULT TRUE,\n                can_buyer_withdraw BOOL DEFAULT TRUE\n            );\n\n            CREATE TABLE IF NOT EXISTS gigacrew_proposals (\n                proposal_id TEXT PRIMARY KEY,\n                terms TEXT,\n                proposal_expiry DATETIME\n            );\n        `);\n    }\n\n    async insertProposal(proposalId: string, terms: string, proposalExpiry: string) {\n        return await this.db.prepare(`\n            INSERT INTO gigacrew_proposals (proposal_id, terms, proposal_expiry) VALUES (?, ?, datetime(?, 'unixepoch'));\n        `).run(proposalId, terms, proposalExpiry);\n    }\n\n    async deleteExpiredProposals() {\n        return await this.db.prepare(`\n            DELETE FROM gigacrew_proposals WHERE proposal_expiry < datetime('now', '-5 minutes');\n        `).run();\n    }\n\n    async insertOrder(orderId: string, buyer: string, seller: string, status: string, terms: string, price: string, deadline: string, callbackData?: string) {\n        if (!terms) {\n            const proposal = await this.db.prepare(`\n                    SELECT * FROM gigacrew_proposals WHERE proposal_id = ?;\n            `).get(orderId);\n\n            if (!proposal) {\n                console.error(\"Proposal not found\");\n                return;\n            }\n\n            terms = proposal.terms;\n        }\n\n        await this.db.prepare(`\n            INSERT INTO gigacrew_orders (order_id, buyer_address, seller_address, status, context, price, deadline, callback_data) \n            VALUES (?, ?, ?, ?, ?, ?, datetime(?, 'unixepoch'), ?) ON CONFLICT(order_id) DO NOTHING;\n        `).run(orderId, buyer, seller, status, terms, price, deadline, callbackData);\n    }\n\n    async setStatus(orderId: string, status: string) {\n        return await this.db.prepare(`\n            UPDATE gigacrew_orders SET status = ? WHERE order_id = ?;\n        `).run(status, orderId);\n    }\n\n    async setWork(orderId: string, work: string) {\n        return await this.db.prepare(`\n            UPDATE gigacrew_orders SET work = ? WHERE order_id = ?;\n        `).run(work, orderId);\n    }\n\n    async setWorkAndReturn(orderId: string, work: string, lockPeriod: string) {\n        return await this.db.prepare(`\n            UPDATE gigacrew_orders SET work = ?, lock_period = datetime(?, 'unixepoch') WHERE order_id = ? RETURNING *;\n        `).get(work, lockPeriod, orderId);\n    }\n\n    async setLockPeriod(orderId: string, lockPeriod: string) {\n        return await this.db.prepare(`\n            UPDATE gigacrew_orders SET lock_period = datetime(?, 'unixepoch') WHERE order_id = ?;\n        `).run(lockPeriod, orderId);\n    }\n\n    async setResolutionPeriod(orderId: string, resolutionPeriod: string) {\n        return await this.db.prepare(`\n            UPDATE gigacrew_orders SET resolution_period = datetime(?, 'unixepoch') WHERE order_id = ?;\n        `).run(resolutionPeriod, orderId);\n    }\n\n    async getOrder(orderId: string) {\n        return await this.db.prepare(`\n            SELECT * FROM gigacrew_orders WHERE order_id = ?;\n        `).get(orderId);\n    }\n\n    async deleteOrdersById(orderIds: string[]) {\n        const placeholders = orderIds.map(id => `?`).join(\",\");\n        return await this.db.prepare(`\n            DELETE FROM gigacrew_orders WHERE order_id IN (${placeholders});\n        `).run(...orderIds);\n    }\n\n    async getActiveOrdersForSeller(seller: string) {\n        return await this.db.prepare(`\n            SELECT * FROM gigacrew_orders WHERE\n                status = ${Status.Pending} AND\n                failed_attempts < 3 AND\n                seller_address = ? AND\n                deadline > datetime('now') AND lock_period IS NULL\n                    ORDER BY deadline ASC;\n        `).all(seller);\n    }\n\n    async getWithdrawableOrdersForSeller(seller: string) {\n        return await this.db.prepare(`\n            SELECT * FROM gigacrew_orders WHERE\n                seller_address = ? AND\n                can_seller_withdraw = TRUE AND\n                (status = ${Status.Pending} OR status = ${Status.BuyerWithdrawn}) AND\n                (lock_period < datetime('now') OR resolution_period < datetime('now'));\n        `).all(seller);\n    }\n\n    async getWithdrawableOrdersForBuyer(buyer: string) {\n        return await this.db.prepare(`\n            SELECT * FROM gigacrew_orders WHERE\n                buyer_address = ? AND\n                can_buyer_withdraw = TRUE AND\n                (status = ${Status.Pending} OR status = ${Status.SellerWithdrawn}) AND\n                (\n                    (deadline < datetime('now') AND lock_period is NULL) OR\n                    resolution_period < datetime('now')\n                );\n        `).all(buyer);\n    }\n\n    async incrementFailedAttempts(orderId: string) {\n        return await this.db.prepare(`\n            UPDATE gigacrew_orders SET failed_attempts = failed_attempts + 1 WHERE order_id = ?;\n        `).run(orderId);\n    }\n\n    async setCanSellerWithdraw(orderIds: string[], canSellerWithdraw: boolean) {\n        const placeholders = orderIds.map(id => `?`).join(\",\");\n        return await this.db.prepare(`\n            UPDATE gigacrew_orders SET can_seller_withdraw = ? WHERE order_id IN (${placeholders});\n        `).run(canSellerWithdraw ? 1 : 0, ...orderIds);\n    }\n\n    async setCanBuyerWithdraw(orderIds: string[], canBuyerWithdraw: boolean) {\n        const placeholders = orderIds.map(id => `?`).join(\",\");\n        return await this.db.prepare(`\n            UPDATE gigacrew_orders SET can_buyer_withdraw = ? WHERE order_id IN (${placeholders});\n        `).run(canBuyerWithdraw ? 1 : 0, ...orderIds);\n    }\n}\n","import { getEmbeddingZeroVector, ModelClass } from \"@elizaos/core\";\nimport { Memory, Content, IAgentRuntime, messageCompletionFooter, stringToUuid, composeContext, generateMessageResponse } from \"@elizaos/core\";\n\nexport const messageHandlerTemplate = `\n{{actionExamples}}\n(Action examples are for reference only. Do not use the information from them in your response.)\n\n# Knowledge\n{{knowledge}}\n\n# Task: Respond with what is expected of {{agentName}}.\nAbout {{agentName}}:\n{{bio}}\n{{lore}}\n\n{{providers}}\n\n{{attachments}}\n\n# Capabilities\nNote that {{agentName}} is capable of reading/seeing/hearing various forms of media, including images, videos, audio, plaintext and PDFs. Recent attachments have been included above under the \"Attachments\" section.\n\n{{messageDirections}}\n\n{{recentMessages}}\n\n{{actions}}\n\n# Instructions: Write the next message for {{agentName}}.\n` + messageCompletionFooter;\n\n\nexport async function workResponseGenerator(runtime: IAgentRuntime, orderId: string, buyerAddress: string, text: string) {\n    const roomId = stringToUuid(orderId);\n    const userId = stringToUuid(buyerAddress);\n\n    await runtime.ensureConnection(\n        userId,\n        roomId,\n    );\n\n    const messageId = stringToUuid(Date.now().toString());\n\n    const content: Content = {\n        text,\n    };\n\n    const userMessage = {\n        content,\n        userId,\n        roomId,\n        agentId: runtime.agentId,\n    };\n\n    const memory: Memory = {\n        id: stringToUuid(messageId + \"-\" + userId),\n        ...userMessage,\n        agentId: runtime.agentId,\n        userId,\n        roomId,\n        content,\n        createdAt: Date.now(),\n    };\n\n    await runtime.messageManager.addEmbeddingToMemory(memory);\n    await runtime.messageManager.createMemory(memory);\n\n    let state = await runtime.composeState(userMessage, {\n        agentName: runtime.character.name,\n    });\n\n    const context = composeContext({\n        state,\n        template: messageHandlerTemplate,\n    });\n\n    const response = await generateMessageResponse({\n        runtime: runtime,\n        context,\n        modelClass: ModelClass.LARGE,\n    });\n\n    if (!response) {\n        throw new Error(\"No response from generateMessageResponse\");\n    }\n\n    // save response to memory\n    const responseMessage: Memory = {\n        id: stringToUuid(messageId + \"-\" + runtime.agentId),\n        ...userMessage,\n        userId: runtime.agentId,\n        content: response,\n        embedding: getEmbeddingZeroVector(),\n        createdAt: Date.now(),\n    };\n\n    await runtime.messageManager.createMemory(responseMessage);\n\n    state = await runtime.updateRecentMessageState(state);\n\n    let message = null as Content | null;\n\n    await runtime.processActions(\n        memory,\n        [responseMessage],\n        state,\n        async (newMessages) => {\n            message = newMessages;\n            return [memory];\n        }\n    );\n\n    await runtime.evaluate(memory, state);\n\n    // Check if we should suppress the initial message\n    const action = runtime.actions.find(\n        (a) => a.name === response.action\n    );\n    const shouldSuppressInitialMessage =\n        action?.suppressInitialMessage;\n\n    if (!shouldSuppressInitialMessage) {\n        return message ? response.text + \"\\n\" + message.text : response.text;\n    } else {\n        return message ? message.text : \"\";\n    }\n}\n","import { GigaCrewClient } from \"../client\";\nimport { Content, generateMessageResponse, getEmbeddingZeroVector, ModelClass, stringToUuid, UUID } from \"@elizaos/core\";\nimport { composeContext, elizaLogger, generateText, HandlerCallback } from \"@elizaos/core\";\nimport { Action, IAgentRuntime, Memory, State } from \"@elizaos/core\";\nimport { calcTrail, NegotiationMessage, validateMessage } from \"gigacrew-negotiation\";\nimport { WebSocket } from \"ws\";\nimport { GigaCrewNegotiationResult, GigaCrewService } from \"../types.ts\";\nimport { ethers } from \"ethers\";\n\nimport { GigaCrewListServicesAction } from \"./list_services.ts\";\nimport { GigaCrewHireAction } from \"./hire.ts\";\nexport { GigaCrewListServicesAction, GigaCrewHireAction };\n\nexport const searchServiceTemplate = `\n# Context: As {{agentName}} you decided to go ahead and hire a service based on the recent conversation that you had.\n\n# Task: The first step is to search for services that align with the needs. Give me the query that you would use to search for the service that you need so I can provide you with a list of services that you can choose from.\n\nAbout {{agentName}}:\n{{bio}}\n{{lore}}\n{{knowledge}}\n\n{{providers}}\n\n{{messageDirections}}\n\n{{recentMessages}}\n\n# Instructions: The query should be less than 100 words and explain the type of service that you need in the form of a search query rather than a message to someone. Your response MUST ONLY contain the query.\n`;\n\nexport const selectManyServicesTemplate = `\nYou used this query to search for some services: {{serviceQuery}}\nNow the results are in and you can see them below.\n\n# ServiceList:\n{{serviceList}}\n\n# Task: Now you need to either 1. Pick ALL the services in the list that seem appropriate based on the query 2. Decide that you want to search again with a different query because NONE of the services seem useful for it 3. Decide that maybe you should give up on hiring a service and apologize to the user.\nSo you're basically being used to filter out the services that are irrelevant.\n\nAbout {{agentName}}:\n{{bio}}\n{{lore}}\n{{knowledge}}\n\n{{providers}}\n\n{{messageDirections}}\n\n{{recentMessages}}\n\n# Instructions\nYour response must be formatted in a JSON block.\nThe possible fields are \"chosen_service_ids\", \"new_query\" and \"apology\".\nThere's also a must include field called \"reason\" which should explain why you chose the field you chose.\n`;\n\nexport const selectServiceTemplate = `\n# Context: As {{agentName}} you decided to go ahead and hire a service based on the recent conversation that you had. And then you searched for services that aligned with the needs.\nYou used this query to search for services: {{serviceQuery}}\n\n# ServiceList:\n{{serviceList}}\n\n# Task: Now you need to either 1. Select a service from the list 2. Decide that you want to search again with a different query 3. Decide that maybe you should give up on hiring a service and apologize to the user.\nAbout {{agentName}}:\n{{bio}}\n{{lore}}\n{{knowledge}}\n\n{{providers}}\n\n{{messageDirections}}\n\n{{recentMessages}}\n\n# Instructions\nYour response must be formatted in a JSON block.\nThe possible fields are \"chosen_service_id\", \"new_query\" and \"apology\".\nThere's also a must include field called \"reason\" which should explain why you chose the field you chose.\n`;\n\nexport const workContextTemplate = `\n# Context: As {{agentName}} you decided to go ahead and hire a service based on the recent conversation that you had. And then you searched for services that aligned with the needs and decided to hire the following service.\n# Service\n{{serviceTitle}}\n{{serviceDescription}}\n\n# Task: Think of the job that you decided to hire this service for based on your recent conversation. Now you need to provide the service provider of this service with information and details about the job so that he can do the work and complete it for you.\nAbout {{agentName}}:\n{{bio}}\n{{lore}}\n{{knowledge}}\n\n{{providers}}\n\n{{messageDirections}}\n\n{{recentMessages}}\n\n# Instructions: Be concise and to the point. Only provide information and context about the job. No need for any other information or formalities.\n`;\n\nexport async function generateServiceQuery(runtime: IAgentRuntime, state: State) {\n    const searchContext = composeContext({\n        state,\n        template: searchServiceTemplate,\n    });\n    const query = await generateText({ runtime, context: searchContext, modelClass: ModelClass.SMALL });\n    elizaLogger.info(\"GigaCrew: Generated service query\", {\n        serviceQuery: query,\n    });\n    return query;\n}\n\nexport async function searchServices(runtime: IAgentRuntime, query: string): Promise<GigaCrewService[]> {\n    const endpoint = (runtime.getSetting(\"GIGACREW_INDEXER_URL\") || process.env.GIGACREW_INDEXER_URL) + \"/api/services/search\";\n    const response = await fetch(`${endpoint}?query=${encodeURIComponent(query)}&limit=10`);\n    const data = await response.json();\n    return data;\n}\n\nexport async function searchAndSelectService(runtime: IAgentRuntime, query: string, state: State, many: boolean = false): Promise<{ services: GigaCrewService[], serviceSelectionResponse: any }> {\n    let services = null;\n    let serviceSelectionResponse = null;\n    let retries = 0;\n    do {\n        services = await searchServices(runtime, query);\n        elizaLogger.info(\"GigaCrew HIRE_AGENT action searched for services\", {\n            services,\n        });\n\n        // Decide which service to hire if any\n        state[\"serviceQuery\"] = query;\n        state[\"serviceList\"] = !Array.isArray(services) || services.length == 0 ? \"NO SERVICES FOUND\" : services.map(service => `ID: ${service.serviceId} - Title: ${service.title.replace(/\\\\n/g, \" \")} - Description: ${service.description.replace(/\\\\n/g, \" \")}`).join(\"\\n\");\n        const serviceContext = composeContext({\n            state,\n            template: many ? selectManyServicesTemplate : selectServiceTemplate,\n        });\n        serviceSelectionResponse = await generateMessageResponse({\n            runtime,\n            context: serviceContext,\n            modelClass: ModelClass.SMALL,\n        });\n\n        elizaLogger.info(\"GigaCrew: Service selection response\", serviceSelectionResponse);\n\n        if (serviceSelectionResponse.new_query && serviceSelectionResponse.new_query.length > 0) {\n            query = serviceSelectionResponse.new_query as string;\n            if (query == \"null\" || query == \"undefined\") {\n                query = null;\n            }\n        } else {\n            query = null;\n        }\n        retries++;\n    } while (query && retries < 3);\n    return { services, serviceSelectionResponse };\n}\n\nexport async function handleServiceSelection(serviceSelectionResponse: any, services: GigaCrewService[], many: boolean = false): Promise<GigaCrewService | GigaCrewService[] | string> {\n    const field_name = many ? \"chosen_service_ids\" : \"chosen_service_id\";\n    \n    let service = null;\n    if (serviceSelectionResponse[field_name] != null && serviceSelectionResponse[field_name] != undefined) {\n        const service_ids = many ? serviceSelectionResponse[field_name].map(id => id.toString()) : [serviceSelectionResponse[field_name].toString()];\n        service = services.filter(service => service_ids.includes(service.serviceId));\n    } else if (serviceSelectionResponse.apology && serviceSelectionResponse.apology.length > 0) {\n        // APOLOGIZE\n        if (serviceSelectionResponse.apology != \"null\" && serviceSelectionResponse.apology != \"undefined\") {\n            elizaLogger.info(\"GigaCrew no service selected... using apology\", {\n                apology: serviceSelectionResponse.apology,\n            });\n            return serviceSelectionResponse.apology as string;\n        }\n    }\n\n    if (!service) {\n        // APOLOGIZE\n        elizaLogger.info(\"GigaCrew bad serviceId... using fallback apology\");\n        return \"I couldn't find a service that does what's needed. I'm sorry.\";\n    }\n\n    return many ? service : service[0];\n}\n\nexport async function generateWorkContext(runtime: IAgentRuntime, service: any, state: State) {\n    state[\"serviceTitle\"] = service.title;\n    state[\"serviceDescription\"] = service.description;\n    const context = composeContext({\n        state,\n        template: workContextTemplate,\n    });\n    const workContext = await generateText({\n        runtime,\n        context,\n        modelClass: ModelClass.SMALL,\n    });\n    elizaLogger.info(\"GigaCrew: Generated work context\", {\n        workContext,\n    });\n    return workContext;\n}\n\nexport async function createAndWaitForWork(client: GigaCrewClient, negotiationResult: any, service: GigaCrewService): Promise<string> {\n    await client.buyerHandler.createEscrow(negotiationResult, service);\n    elizaLogger.info(\"GigaCrew: Waiting for work to be done\", {\n        orderId: negotiationResult.orderId,\n    });\n    return await client.buyerHandler.waitForWork(negotiationResult.orderId);\n}\n\nexport async function negotiate(runtime: IAgentRuntime, client: GigaCrewClient, service: GigaCrewService, workContext: string): Promise<GigaCrewNegotiationResult> {    \n    return new Promise((resolve, reject) => {\n        let resolved = false;\n        const ws = new WebSocket(service.communicationChannel);\n        ws.on('open', async () => {\n            elizaLogger.info(\"GigaCrew: Negotiation channel opened\");\n            const roomId = crypto.randomUUID();\n            const userId = stringToUuid(service.provider);\n            await runtime.ensureConnection(\n                userId,\n                roomId,\n            );\n\n            let trail = \"0x0\";\n            let processing = true;\n            let state = await runtime.composeState({\n                userId,\n                roomId,\n                agentId: runtime.agentId,\n                content: {\n                    text: \"\",\n                },\n            }, {\n                agentName: runtime.character.name,\n                serviceTitle: service.title,\n                serviceDescription: service.description,\n                workContext,\n            });\n\n            let lastProposal = {\n                terms: null,\n                price: null,\n                deadline: null,\n                proposalExpiry: null,\n                proposalSignature: null,\n            };\n\n            // Function to handle user input\n            const getInput = async (messageId?: string) => {\n                const context = composeContext({\n                    state,\n                    template: negotiationTemplate,\n                });\n\n                const response = await generateMessageResponse({\n                    runtime,\n                    context,\n                    modelClass: ModelClass.MEDIUM,\n                });\n                elizaLogger.info(\"GigaCrew: Generated negotiation response\", {\n                    type: response.type,\n                    response: response,\n                });\n\n                if (response.type == \"ignore\") {\n                    ws.close();\n                    return;\n                } else if (response.type == \"accept\") {\n                    resolved = true;\n                    ws.close();\n\n                    const negotiationResult: GigaCrewNegotiationResult = {\n                        orderId: \"0x\" + trail,\n                        proposalExpiry: lastProposal.proposalExpiry,\n                        terms: lastProposal.terms,\n                        price: lastProposal.price,\n                        deadline: lastProposal.deadline * 60,\n                        proposalSignature: lastProposal.proposalSignature,\n                    };\n                    elizaLogger.info(\"GigaCrew: Negotiation result\", {\n                        negotiationResult,\n                    });\n\n                    resolve(negotiationResult);\n                    return;\n                }\n\n                const responseMessage: NegotiationMessage = {\n                    type: response.type as \"msg\" | \"proposal\",\n                    content: response.content as string,\n                    timestamp: new Date().getTime(),\n                    trail,\n                };\n                elizaLogger.info(\"GigaCrew: Converted to negotiation response message\", { responseMessage });\n                trail = calcTrail(responseMessage as NegotiationMessage);\n                elizaLogger.info(\"GigaCrew: Calculated trail\", { trail });\n                // responseMessage.signature = await client.buyer.signingKey.sign(ethers.getBytes(\"0x\" + trail)).serialized;\n\n                const responseMemory: Memory = {\n                    id: stringToUuid((messageId ? messageId : stringToUuid(Date.now().toString())) + \"-\" + runtime.agentId),\n                    roomId,\n                    userId: runtime.agentId,\n                    agentId: runtime.agentId,\n                    content: {\n                        text: response.content as string,\n                    },\n                    embedding: getEmbeddingZeroVector(),\n                    createdAt: Date.now(),\n                };\n                await runtime.messageManager.createMemory(responseMemory);\n\n                ws.send(JSON.stringify(responseMessage));\n                processing = false;\n            };\n    \n            ws.on('message', async (data) => {\n                if (processing) {\n                    elizaLogger.error(\"Already processing a previous message\");\n                    ws.close();\n                    return;\n                }\n                processing = true;\n\n                const validateMessageResult = validateMessage(data.toString(), trail, service.provider);\n                let message = validateMessageResult.message;\n                trail = validateMessageResult.trail;\n                if (!message) {\n                    elizaLogger.error(\"Invalid message\", { message: data.toString() });\n                    ws.close();\n                    return;\n                }\n\n                // const extractedUser = ethers.recoverAddress(trailBytes, message.signature);\n                // if (extractedUser != service.provider) {\n                //     elizaLogger.info(\"GigaCrew: Invalid signature\", {\n                //         expected: service.provider,\n                //         extracted: extractedUser\n                //     });\n                //     ws.close();\n                //     return;\n                // }\n\n                if (message.type == \"proposal\") {\n                    lastProposal.terms = message.terms;\n                    lastProposal.price = message.price;\n                    lastProposal.deadline = message.deadline;\n                    lastProposal.proposalExpiry = message.proposalExpiry;\n                    lastProposal.proposalSignature = message.proposalSignature;\n                }\n\n                const messageId = stringToUuid(Date.now().toString());\n                const content: Content = {\n                    text: message.type == \"proposal\" ? `${message.content}\\nBasically\\nterms: ${message.terms}\\nprice: ${message.price}\\ndeadline: ${message.deadline}minutes\\n` : message.content as string,\n                };\n                const userMessage = {\n                    content,\n                    userId,\n                    roomId,\n                    agentId: runtime.agentId,\n                };\n\n                const memory: Memory = {\n                    id: stringToUuid(messageId + \"-\" + userId),\n                    ...userMessage,\n                    agentId: runtime.agentId,\n                    userId,\n                    roomId,\n                    content,\n                    createdAt: Date.now(),\n                };\n\n                await runtime.messageManager.addEmbeddingToMemory(memory);\n                await runtime.messageManager.createMemory(memory);\n                state = await runtime.updateRecentMessageState(state);\n\n                await getInput(messageId);\n            });\n        \n            await getInput();\n        });\n    \n        ws.on('error', (error) => {\n            elizaLogger.error(\"GigaCrew: Negotiation channel error\", { error });\n            reject(error);\n        });\n    \n        ws.on('close', () => {\n            elizaLogger.info(\"GigaCrew: Negotiation channel closed\");\n            if (!resolved) {\n                reject(new Error(\"Negotiation failed\"));\n            }\n        });\n    });\n}\n\nconst negotiationTemplate = `\n# Context: You are a Negotiator for {{agentName}}. {{agentName}} has decided to use a service provider to get some work done and he has sent us the message he'd like us to use to negotiate with the service provider.\n\n# {{agentName}}'s Initial Message:\n{{workContext}}\n\n# Task: Based on the above details and the following background on {{agentName}} negotiate with the service provider and decide on the following:\n1. Terms of the job\n2. Price\n3. Deadline\n\nFor negotiations consider the following:\n- Be reasonable and expect the service provider to also be reasonable.\n- Take into consideration the service provider's title and description.\n- If it seems things are going nowhere and there's too much useless back and forth then just ignore. We can just try to find someone else.\n- DO NOT make any concessions on what's to be done everything must be done as requested by the user.\n\n# Background on {{agentName}}\n## Knowledge:\n{{knowledge}}\n## Bio and Lore:\n{{bio}}\n{{lore}}\n\n# Service Provider's Details:\nTitle: {{serviceTitle}}\nDescription: {{serviceDescription}}\n\n{{providers}}\n\n{{recentMessages}}\n\n# Instructions\nYour response must ONLY BE A JSON block and nothing else at all.\nThe json response has the following fields:\n- type: REQUIRED. The type of your message. It can be \"ignore\" to stop, \"msg\" to communicate, \"accept\" to accept a proposal this can ONLY be used if the last message was a proposal.\n- content: REQUIRED. The actual text of the message. Be professional and concise.\n`;\n","import { Action, elizaLogger, getEmbeddingZeroVector, HandlerCallback, IAgentRuntime, Memory, State, stringToUuid } from \"@elizaos/core\";\nimport { generateServiceQuery, handleServiceSelection, searchAndSelectService, searchServices } from \".\";\nimport { GigaCrewClient } from \"../client\";\nimport { GigaCrewService } from \"../types\";\n\nexport const GigaCrewListServicesAction: Action = {\n    name: \"LIST_SERVICES\",\n    similes: [\"LIST_SERVICE\", \"LIST_AGENTS\"],\n    description: \n    \"Use this action when you need to list services / agents that are available to be hired to do some task. And if a user wants to hire one of the services you can use the HAND_OFF_<provider_address> action\",\n    examples: [\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Hey I need help with a calculation!\",\n                },\n            },\n            {\n                user: \"{{user2}}\",\n                content: {\n                    text: \"Here are the services that are available to be hired on GigaCrew that seem to be related to what you need help with.\",\n                    action: \"LIST_SERVICES\",\n                },\n            },\n            {\n                user: \"{{user2}}\",\n                content: {\n                    text: \"ID: 2\\nTitle: Calculator Service\\nDescription: I do calculations for you\\nProvider: 0x123\\n\\nID: 7\\nTitle: Math tutor\\nDescription: I can help you with maths\\nProvider: 0x777\",\n                },\n            },\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"I want the first one\",\n                },\n            },\n            {\n                user: \"{{user2}}\",\n                content: {\n                    text: \"Got it. You are now handed off to the service provider for negotiation. Please talk about what you need in details and negotiate with him directly.\",\n                    action: \"HAND_OFF_0x123\",\n                },\n            },\n        ],\n    ],\n    validate: async (runtime: IAgentRuntime, message: Memory, state?: State) => {\n        // Always allow looking up services\n        return true;\n    },\n    handler: async (runtime: IAgentRuntime, message: Memory, state?: State, options?: { [key: string]: unknown }, callback?: HandlerCallback) => {\n        elizaLogger.info(\"GigaCrew LIST_SERVICES action called\", {\n            message: message.content.text,\n        });\n\n        // Generate service query\n        const query = await generateServiceQuery(runtime, state);\n\n        // Search for services\n        const { services, serviceSelectionResponse } = await searchAndSelectService(runtime, query, state, true);\n        const chosen_services = await handleServiceSelection(serviceSelectionResponse, services, true) as GigaCrewService[];\n\n        const serviceList = chosen_services.map(service => `ID: ${service.serviceId}\\nTitle: ${service.title.replace(/\\\\n/g, \" \")}\\nDescription: ${service.description.replace(/\\\\n/g, \" \")}\\nProvider: ${service.provider}`).join(\"\\n\\n\");\n        const content = {\n            text: `I used the following query to search for services for you\\nQuery: ${query}\\n\\n` + serviceList\n        };\n        \n        const responseMessage: Memory = {\n            id: stringToUuid(stringToUuid(Date.now().toString()) + \"-\" + runtime.agentId),\n            userId: runtime.agentId,\n            agentId: runtime.agentId,\n            roomId: message.roomId,\n            content,\n            embedding: getEmbeddingZeroVector(),\n            createdAt: Date.now(),\n        };\n\n        await runtime.messageManager.createMemory(responseMessage);\n\n        callback(content);\n    }\n}\n","import { Action, elizaLogger, HandlerCallback, IAgentRuntime, Memory, State } from \"@elizaos/core\";\nimport { createAndWaitForWork, generateServiceQuery, generateWorkContext, handleServiceSelection, negotiate, searchAndSelectService } from \".\";\nimport { GigaCrewClient } from \"../client\";\nimport { GigaCrewService } from \"../types\";\n\nexport const GigaCrewHireAction: Action = {\n    name: \"HIRE_AGENT\",\n    similes: [\"HIRE_SERVICE\", \"SEARCH_SERVICES\"],\n    description: \n    \"Use this action when you have all the data and information you need to do a task or a service HOWEVER you are not able to do it yourself. \" + \n    \"Keep in mind that this action will hire another agent to process the task or service based on the context you provide so DO NOT use this action if you don't have all the information needed for the task. Instead just ask the user for the information first.\" + \n    \"If you're going to ask the user if they're ok with you hiring someone to do it, DO NOT use this action.\" +\n    \"This action is only for when 1. You have all the information 2. You are sure you are going to do it and aren't going to ask for permission.\"\n    ,\n    examples: [\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Hey I need help with a calculation!\",\n                },\n            },\n            {\n                user: \"{{user2}}\",\n                content: {\n                    text: \"I'm not confident in maths... I could hire someone to do it for me if you want?\",\n                },\n            },\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Oh ok sure! Please hire someone to do it for me and let me know what they say.\",\n                },\n            },\n            {\n                user: \"{{user2}}\",\n                content: {\n                    text: \"Ok well first I need to know what the formula is and the numbers you want to use.\",\n                },\n            },\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"The formula is 5x^2 + 10x + 15 when x = 2\",\n                },\n            },\n            {\n                user: \"{{user2}}\",\n                content: { text: \"Alright I hired someone to calculate 5x^2 + 10x + 15 when x = 2 for you!\", action: \"HIRE_AGENT\" },\n            },\n        ],\n    ],\n    validate: async (runtime: IAgentRuntime, message: Memory, state?: State) => {\n        // Always allow hiring\n        return true;\n    },\n    handler: async (runtime: IAgentRuntime, message: Memory, state?: State, options?: { [key: string]: unknown }, callback?: HandlerCallback) => {\n        elizaLogger.info(\"GigaCrew HIRE_AGENT action called\", {\n            message: message.content.text,\n        });\n        const client: GigaCrewClient = runtime.clients.find(c => c instanceof GigaCrewClient) as GigaCrewClient;\n\n        // Generate service query\n        const query = await generateServiceQuery(runtime, state);\n\n        // Search for services\n        const { services, serviceSelectionResponse } = await searchAndSelectService(runtime, query, state);\n\n        // Handle service selection\n        const service = await handleServiceSelection(serviceSelectionResponse, services) as GigaCrewService;\n        if (typeof service === \"string\") {\n            return callback({\n                text: service,\n            });\n        }\n\n        // Generate context for the service provider\n        const workContext = await generateWorkContext(runtime, service, state);\n\n        // Start negotiation\n        let negotiationResult = null;\n        try {\n            negotiationResult = await negotiate(runtime, client, service, workContext);\n        } catch (error) {\n            elizaLogger.error(\"Negotiation failed\", { error });\n            return callback({\n                text: \"Negotiation failed\",\n            });\n        }\n\n        // Hire agent\n        const work = await createAndWaitForWork(client, negotiationResult, service);\n        callback({\n            text: work,\n        });\n    }\n}\n","import { Plugin } from \"@elizaos/core\";\nimport { GigaCrew } from \"./client\";\nimport { GigaCrewHireAction, GigaCrewListServicesAction } from \"./actions\";\nimport { NegotiationMessage, calcTrail } from \"gigacrew-negotiation\";\n\nconst gigaCrewPlugin = {\n    name: \"GigaCrew\",\n    description: \"GigaCrew plugin\",\n    clients: [new GigaCrew()],\n    actions: [GigaCrewHireAction],\n} as Plugin;\n\nexport { GigaCrewListServicesAction, calcTrail, NegotiationMessage };\nexport default gigaCrewPlugin;\n"],"mappings":"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","names":["elizaLogger","ethers","crypto","elizaLogger","ethers","getEmbeddingZeroVector","ModelClass","stringToUuid","composeContext","generateMessageResponse","generateMessageResponse","getEmbeddingZeroVector","ModelClass","stringToUuid","composeContext","elizaLogger","calcTrail","validateMessage","elizaLogger","getEmbeddingZeroVector","stringToUuid","elizaLogger","stringToUuid","getEmbeddingZeroVector","elizaLogger","elizaLogger","composeContext","ModelClass","elizaLogger","searchServices","generateMessageResponse","service","stringToUuid","negotiationTemplate","calcTrail","getEmbeddingZeroVector","validateMessage","ethers","elizaLogger","NegotiationMessage","calcTrail"]}